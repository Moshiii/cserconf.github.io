%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: datafdoc.dvi
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Helvetica Courier
%%+ Helvetica-Bold
%%EndComments
%DVIPSCommandLine: dvips datafdoc.dvi -o datafdoc.ps
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 2002.07.15:1453
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginFont: Times-Roman
% @psencodingfile{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "14 April 1995",
%   filename = "8r.enc",
%   email = "kb@cs.umb.edu",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% }
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (datafdoc.dvi)
@start /Fa 105[19 28[17 1[25 17 19 10 15 15 1[19 19 19
27 10 17 1[10 19 19 10 17 19 17 19 19 9[31 1[27 21 19
23 1[23 27 25 31 21 2[12 1[27 23 23 27 25 23 23 7[19
1[19 19 3[19 19 19 10 9 12 9 4[12 39[{TeXBase1Encoding ReEncodeFont}52
37.500000 /Times-Italic rf /Fb 75[12 29[19 27[17 19 19
27 19 19 10 15 12 19 19 19 19 29 10 19 10 10 19 19 12
17 19 17 19 17 3[12 1[12 23 2[35 27 27 23 21 25 1[21
27 27 33 23 27 15 12 27 27 21 23 27 25 25 27 6[10 19
19 19 19 19 19 19 19 19 19 1[9 12 9 2[12 12 12 29 35[21
2[{TeXBase1Encoding ReEncodeFont}72 37.500000 /Times-Roman
rf /Fc 137[21 23 14 16 18 1[23 21 23 35 12 2[12 23 21
14 18 23 18 23 21 10[30 1[28 23 15[30 67[{TeXBase1Encoding ReEncodeFont}
23 41.666668 /Times-Bold rf /Fd 1 16 df<EA03C0EA0FF0EA1FF8EA3FFCEA7FFEA2
B5FCA4EA7FFEA2EA3FFCEA1FF8EA0FF0EA03C010107E9115>15 D
E /Fe 2 63 df<140E143C14F0EB03C0EB0F00133C13F0EA03C0000FC7FC123C12F0A212
3C120FEA03C0EA00F0133C130FEB03C0EB00F0143C140E17167D931E>60
D<12E01278121EEA0780EA01E0EA0078131EEB0780EB01E0EB0078141EA21478EB01E0EB
0780EB1E001378EA01E0EA0780001EC7FC127812E017167D931E>62
D E /Ff 134[23 23 32 23 25 14 23 16 1[25 25 25 37 12
2[12 25 25 14 23 25 23 25 23 12[25 28 30 4[35 6[25 28
30 30 1[30 7[23 23 23 23 23 23 23 23 23 23 1[12 6[12
36[25 2[{TeXBase1Encoding ReEncodeFont}44 41.666668 /Helvetica-Bold
rf /Fg 130[12 1[12 1[12 12 12 12 12 12 12 12 1[12 12
12 12 12 12 1[12 12 12 12 12 12 12 12 12 1[12 1[12 12
12 12[12 12[12 2[12 12 12 12 1[12 12 12 12 12 12 12 12
12 12 12 12 12 12 12 12 12 12 2[12 1[12 12 12 33[{
TeXBase1Encoding ReEncodeFont}57 20.833334 /Courier rf
/Fh 134[19 19 1[19 21 10 19 12 1[21 21 21 31 8 2[8 21
21 10 21 21 19 21 21 12[23 1[27 2[29 8[23 25 2[25 25
10[21 21 21 21 21 21 21 2[12 9[21 35[{TeXBase1Encoding ReEncodeFont}37
37.500000 /Helvetica rf /Fi 134[23 3[25 15 18 20 1[25
23 25 1[13 2[13 25 23 1[20 25 20 1[23 11[33 30 25 14[33
33 1[33 12[23 23 23 23 2[11 46[{TeXBase1Encoding ReEncodeFont}27
45.833332 /Times-Bold rf /Fj 134[17 17 24 17 17 9 13
11 1[17 17 17 26 9 2[9 17 17 11 15 17 15 17 15 3[11 1[11
3[31 2[20 18 4[24 10[22 1[24 8[17 4[17 17 17 2[8 11 8
2[11 11 11 36[18 2[{TeXBase1Encoding ReEncodeFont}41
33.333332 /Times-Roman rf /Fk 7 56 df<1218127812981218AC12FF08107D8F0F>
49 D<121FEA6180EA40C0EA806012C01200A213C0EA0180EA030012065AEA10201220EA
7FC012FF0B107F8F0F>I<121FEA2180EA60C0A212001380EA0100121FEA008013401360
12C0A2EA8040EA6080EA1F000B107F8F0F>I<EA0180A212031205120D12191211122112
4112C1EAFFE0EA0180A4EA0FE00B107F8F0F>I<EA20C0EA3F80EA2E001220A3122FEA30
80EA2040EA0060A312C0EA80C0EA6180EA1F000B107F8F0F>I<EA0780EA1840EA30C012
6013005A12CFEAF080EAE040EAC060A31240EA60C0EA3080EA1F000B107F8F0F>I<1240
EA7FF013E0EA8040A2EA0080EA01001202A212061204A2120CA50C117F900F>I
E /Fl 7 56 df<120C121C12EC120CAFEAFFC00A137D9211>49 D<121FEA60C01360EAF0
7013301260EA0070A2136013C012011380EA02005AEA08101210EA2020EA7FE012FF0C13
7E9211>I<EA0FC0EA3070EA7038A31200133013E0EA0FC0EA007013381318131C126012
F01318EAE038EA6070EA1FC00E137F9211>I<136013E0A2EA016012021206120C120812
101220126012C0EAFFFCEA0060A5EA03FC0E137F9211>I<EA6060EA7FC01380EA440012
40A3124FEA70C0EA40E0EA00601370A212E0A21360EA40E0EA21C0EA1F000C137E9211>
I<EA07C0EA0C20EA10701220EA6000A25A12CFEAD0C0EAE060EAC0201330A31240EA6020
EA2060EA10C0EA0F000C137E9211>I<1240EA7FFC13F8EA4010EA80301320EA00401380
EA0100A25A12021206A2120EA512040E147E9311>I E /Fm 134[18
18 28 18 21 12 16 16 1[21 21 21 30 12 18 12 12 21 21
12 18 21 18 21 21 9[35 2[23 10[14 2[25 23[10 14 10 4[14
36[21 2[{TeXBase1Encoding ReEncodeFont}33 41.666668 /Times-Italic
rf /Fn 138[28 17 19 22 1[28 25 28 41 14 2[14 28 25 17
22 28 22 28 25 14[36 1[30 6[19 4[36 36 1[36 12[25 25
25 25 2[12 46[{TeXBase1Encoding ReEncodeFont}29 50.000000
/Times-Bold rf /Fo 71[17 3[17 61[25 25 14 19 17 25 25
25 25 39 14 2[14 2[17 22 1[22 25 22 11[36 4[28 6[17 2[28
1[36 1[33 1[46 7[25 9[12 17 3[17 17 40[{TeXBase1Encoding ReEncodeFont}
31 50.000000 /Times-Roman rf /Fp 138[33 20 23 27 1[33
30 33 50 3[17 33 30 1[27 33 27 1[30 11[43 1[33 2[37 8[47
2[43 68[{TeXBase1Encoding ReEncodeFont}20 59.999973 /Times-Bold
rf /Fq 105[21 27[18 21 21 30 21 21 12 16 14 21 21 21
21 32 12 21 12 12 21 21 14 18 21 18 21 18 3[14 1[14 3[39
1[30 25 23 28 1[23 30 30 37 25 2[14 30 30 23 25 30 28
28 30 5[12 12 21 21 21 21 21 21 21 21 21 21 12 10 14
10 2[14 14 14 35[23 23 2[{TeXBase1Encoding ReEncodeFont}69
41.666668 /Times-Roman rf /Fr 139[12 1[14 2[21 21 1[12
6[18 21 18 21 18 13[23 3[30 1[37 9[28 1[30 14[21 1[21
1[10 4[14 14 40[{ .167 SlantFont TeXBase1Encoding ReEncodeFont }20
41.666668 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop -91 28 a Fr(SCAM)10 b(2002.)i(Montreal)e(\(Canada\))g(October)g
(2002)1255 b Fq(1)129 187 y Fp(Using)15 b(Dependence)e(Graphs)i(as)g(a)
g(Support)g(to)g(Document)f(Pr)o(ograms)762 345 y Fo(Fran)s(\270)-19
b(coise)11 b(Balmas)748 403 y(Dept.)k(Informatique)672
461 y(Uni)o(v)o(ersit)s(\264)-20 b(e)12 b(P)o(aris)h(8)f(\(France\))737
519 y(fb@ai.uni)o(v-paris8.fr)308 694 y Fn(Abstract)-41
794 y Fm(In)g(this)h(paper)-5 b(,)14 b(we)f(ar)n(gue)h(that)e(sour)n
(ce)i(code)f(is)g(not)f(the)h(best)-91 844 y(support)c(for)g
(commenting)g(pr)n(ogr)o(ams)g(and)g(we)h(intr)n(oduce)f(depen-)-91
894 y(dence)14 b(gr)o(aphs)f(as)h(a)f(better)h(support)e(since)i(the)o
(y)g(of)o(fer)f(dif)o(fer)n(ent)-91 944 y(le)o(vels)h(of)f(abstr)o
(action)f(and)h(make)h(visible)f(objects)g(that)g(ar)n(e)h(not)-91
993 y(dir)n(ectly)c(r)n(epr)n(esented)j(in)c(the)i(sour)n(ce)g(code)o
(.)-41 1043 y(W)l(e)d(\002rst)g(intr)n(oduce)g(our)g(tool)f(to)h
(display)g(dependence)h(gr)o(aphs,)-91 1093 y(focusing)f(on)h(how)f
(dif)o(fer)n(ent)h(vie)o(ws)h(of)e(the)h(same)h(pr)n(ogr)o(am)f(can)g
(be)-91 1143 y(b)o(uilt)14 b(and)h(tuned)g(by)h(gr)n(ouping)f(together)
f(nodes)i(that)e(ar)n(e)j(syn-)-91 1193 y(tactically)10
b(or)h(conceptually)g(r)n(elated.)16 b(W)l(e)c(also)e(show)h(how)g
(these)-91 1243 y(vie)o(ws)16 b(make)f(visible)g(objects)g(of)f(the)i
(pr)n(ogr)o(am)e(that)g(ar)n(en')o(t)h(ac-)-91 1292 y(cessible)d(for)f
(comment)h(in)f(the)g(sour)n(ce)i(code)f(while)f(the)o(y)g(can)h(be,)
-91 1342 y(in)h(our)g(tool,)h(ric)o(hly)g(documented)f(thr)n(ough)f
(typed)i(annotations.)-91 1392 y(Then)c(we)g(r)n(e)o(vie)o(w)i(whic)o
(h)d(kinds)h(of)f(units)g(can)h(be)g(commented)g(this)-91
1442 y(way)e(and)g(discuss)h(a)f(typical)f(way)i(to)f(apply)g(our)g
(tool)f(to)h(document)-91 1492 y(pr)n(ogr)o(ams.)19 b(F)n(inally)n(,)12
b(we)g(give)h(str)o(ate)n(gies)f(towar)n(ds)g(the)g(automa-)-91
1541 y(tion)d(of)g(pr)n(ogr)o(am)h(documentation.)-91
1708 y Fn(1.)j(Intr)o(oduction)-41 1816 y Fq(Program)k(understanding)e
(is)i(mainly)f(a)h(process)h(of)f(kno)o(wl-)-91 1865
y(edge)c(reco)o(v)o(ery)m(.)22 b(While)12 b(working)f(with)h(a)h
(program,)h(one)f(b)o(uilds)-91 1915 y(mental)f(representations)g(that)
g(e)o(xplain)g(what)h(the)f(program)g(does)-91 1965 y(or)f(ho)o(w)g(it)
f(works,)h(and)h(this)e(aquired)h(kno)o(wledge)g(is)g(likely)e(to)i(be)
-91 2015 y(stored:)j(this)d(way)h(one)f(can)i(reuse)f(it)f(later)g(or)h
(e)o(v)o(en)g(share)h(it)d(with)-91 2065 y(other)f(people)i(working)d
(on)i(the)g(same)i(program.)-41 2115 y(The)g(crucial)f(question)f(is)h
(thus)g(where)h(and)f(ho)o(w)g(to)g(store)g(this)-91
2164 y(kno)o(wledge.)27 b(When)15 b(it)f(concerns)i(lo)o(w-le)o(v)o(el)
e(units)g(of)h(the)g(pro-)-91 2214 y(gram,)e(like)e(instructions)e(or)j
(syntactic)f(constructs,)i(it)e(can)h(be)g(at-)-91 2264
y(tached)f(to)f(the)g(source)h(code,)h(among)f(other)f(e)o(xisting)f
(comments.)-91 2314 y(But)k(when)h(it)f(concerns)i(units)e(that)h(don')
o(t)f(ha)o(v)o(e)i(')n(reality')e(in)g(the)-91 2364 y(source)i(\002le,)
i(like)d(the)g(v)o(alue)h(of)g(a)g(v)o(ariable)g(after)g(a)h(gi)o(v)o
(en)e(loop)-91 2413 y(or)h(a)h(functional)e(module)h(spread)h(o)o(v)o
(er)g(se)o(v)o(eral)h(procedures)f(or)-91 2463 y(e)o(v)o(en)d(\002les,)
g(it)e(is)g(v)o(ery)i(hard)e(to)h(ef)o(\002ciently)f(put)g(it)g
(directly)g(in)g(the)-91 2513 y(source)16 b(code,)i(because)f(one)f
(doesn')o(t)f(kno)o(w)g(the)g(precise)i(place)-91 2563
y(where)d(to)e(attach)i(it.)21 b(This)14 b(sho)o(ws)f(that)f(source)i
(code,)h(e)o(v)o(en)f(if)f(it)-91 2613 y(is)c(our)g(primary)h(source)g
(of)f(information,)f(is)i(not)f(the)g(best)h(support)-91
2662 y(for)16 b(comments)h(documenting)e(programs:)24
b(\002rst)16 b(it)f(of)o(fers)h(only)987 694 y(one,)g(v)o(ery)f(lo)o(w)
m(,)g(le)o(v)o(el)g(of)f(abstraction)g(\226)g(and)g(man)o(y)i(comments)
987 744 y(refer)11 b(to)g(higher)f(le)o(v)o(els)h(like)f(functional)f
(or)h(architectural)h(units)f(\226)987 794 y(and)g(secondly)m(,)h(man)o
(y)g(objects)f(of)g(the)g(program)g(don')o(t)g(ha)o(v)o(e)h(their)987
844 y(counter)o(-part)d(in)g(the)h(source)g(code)h(\226)e(since)i(the)o
(y)e(e)o(xist)h(only)f(as)i(the)987 894 y(ef)o(fect)f(of)g(se)o(v)o
(eral)h(instructions)c(spread)k(through)d(the)i(source)g(code)987
944 y(\002les)h(\226.)1037 996 y(In)f(this)f(paper)n(,)j(we)e(e)o
(xplore)h(the)f(role)g(of)g(dependence)h(graphs)1953
981 y Fl(1)987 1046 y Fq(as)20 b(support)d(to)h(ef)o(\002ciently)h
(document)g(programs)f(at)h(dif)o(ferent)987 1096 y(le)o(v)o(els)d(of)f
(abstraction.)29 b(W)m(e)16 b(recently)f(de)o(v)o(eloped)h(a)g(system)g
(to)987 1146 y(display)h(dependence)j(graphs)e([2])g(that)g(allo)o(ws)g
(to)g(group)f(sets)987 1196 y(of)h(nodes)1144 1181 y
Fl(2)1181 1196 y Fq(in)g(order)g(to)g(reduce)i(the)e(size)h(of)g(the)f
(graph.)38 b(In)987 1246 y(a)18 b(fully)f(automatic)g(way)m(,)k(all)c
(nodes)h(of)g(structures)f(like)g(func-)987 1295 y(tions,)12
b(loops)f(or)h(conditional)e(statements,)j(are)g(\002rst)f(grouped)f
(to-)987 1345 y(gether)n(,)j(and)e(this)g(recursi)o(v)o(ely)g(in)g
(order)g(to)g(form)h(a)g(hierarchy)f(of)987 1395 y(groups)d(that)h
(correspond)g(to)g(the)g(syntactic)g(structure)g(of)g(the)g(pro-)987
1445 y(gram.)21 b(This)13 b(hierarchy)g(can)g(then)g(be)g(re\002ned)g
(in)f(order)h(to)f(more)987 1495 y(closely)h(re\003ect)h(conceptual)f
(units)e(of)i(the)g(gi)o(v)o(en)g(program.)21 b(De-)987
1544 y(pendences)10 b(\226)e(both)g(control)g(and)h(data)g(dependences)
h(\226)f(are)g(\002nally)987 1594 y(displayed)k(with)g(these)h(groups)f
(either)g(collapsed)h(or)f(e)o(xpanded:)987 1644 y(when)k(most)h
(groups)e(are)j(collapsed,)g(the)e(graph)h(is)f(small)g(and)987
1694 y(sho)o(ws)e(an)h(o)o(v)o(ervie)o(w)g(of)f(the)h(dependences;)i
(when)e(groups)f(are)987 1744 y(e)o(xpanded)d(to)f(sho)o(w)h(more)g
(nodes,)h(more)f(details)f(are)i(visible)d(b)o(ut)987
1793 y(the)k(graph)h(becomes)h(lar)o(ger;)g(when)f(focusing)e(on)h(a)i
(group,)f(the)987 1843 y(details)8 b(are)h(visible)f(b)o(ut)g(the)g
(graph)g(remains)h(of)f(manageable)i(size.)1037 1896
y(W)n(ith)15 b(this)f(tool,)i(we)g(are)g(able)f(to)g(see)i(a)f(program)
f(at)g(dif)o(fer)o(-)987 1946 y(ent)c(le)o(v)o(els)h(of)g(abstraction:)
i(at)e(a)g(lo)o(w)f(le)o(v)o(el)h(when)g(we)g(see)g(nodes)987
1996 y(and)i(almost)g(no)g(group,)h(and)f(at)h(a)f(higher)g(le)o(v)o
(el)g(when)h(no)f(node)987 2046 y(is)d(visible)f(b)o(ut)g(only)g
(groups;)g(at)i(a)f(v)o(ery)h(high)e(le)o(v)o(el,)i(we)f(see)h(only)987
2095 y(the)d(main)g(components)g(of)g(a)h(program.)j(Furthermore,)c
(the)g(corre-)987 2145 y(sponding)e(graphs)i(render)g(visible)f(those)h
(objects)g(of)g(the)g(program)987 2195 y(that)15 b(are)h(not)e(objects)
h(of)g(the)g(source)h(code,)i(like)c(the)h(v)o(alue)g(re-)987
2245 y(turned)9 b(by)h(a)h(function)e(or)h(a)h(v)o(ariable)f(after)g(a)
h(loop.)1037 2298 y(Therefore,)h(we)f(hypothesized)f(that)h(dependence)
g(graphs,)h(or)o(-)987 2348 y(ganized)i(in)g(such)h(a)g(hierarchical)g
(way)m(,)h(are)f(a)g(good)f(support)f(to)987 2397 y(document)j
(programs)f(and)h(we)g(e)o(xtended)h(our)e(system)h(for)f(this)987
2447 y(purpose:)d(e)o(v)o(ery)f(group)f(or)g(node,)h(be)f(it)g(an)h
(instruction)d(or)i(a)h(v)o(ari-)987 2497 y(able,)j(can)g(be)f
(documented)g(with)e(as)j(man)o(y)f(as)h(necessary)g(typed)p
987 2545 394 2 v 1029 2572 a Fk(1)1047 2583 y Fj(W)m(e)7
b(use)f(a)h(simpli\002ed)g(version)e(of)h(system)g(dependence)t(graphs)
f([8])i(\(see)f(Sec-)987 2623 y(tion)i(2.1\).)1029 2651
y Fk(2)1047 2662 y Fj(A)g(node)f(represents)g(an)g(instruction)h(or)g
(a)g(v)o(ariable)f(\(see)h(Section)g(2.1\).)p eop
%%Page: 2 2
2 1 bop -91 42 a Fq(annotations)13 b(\226)h(we)h(pro)o(vide)e(an)i
(annotation)d(editor)i(\226)g(and)g(their)-91 91 y(display)9
b(can)h(be)h(controlled)d(in)h(order)h(to)f(not)g(o)o(v)o(erload)h(the)
g(corre-)-91 141 y(sponding)g(graph.)18 b(As)12 b(a)h(result,)f
(programs)g(can)h(be)f(documented)-91 191 y(at)d(dif)o(ferent)g(le)o(v)
o(els)g(of)h(abstraction)e(and)i(objects)f(manipulated)g(by)-91
241 y(the)k(program)h(can)g(not)f(only)f(be)i(ef)o(\002ciently)f
(described)h(b)o(ut)f(also)-91 291 y(illustrated)8 b(with)h(sample)i(v)
o(alues.)-41 340 y(In)j(the)h(ne)o(xt)g(Section,)i(we)e(\002rst)g
(introduce)f(our)g(dependence)-91 390 y(graphs,)g(their)f(hierarchical)
h(or)o(ganization)e(and)h(the)h(annotations)-91 440 y(the)o(y)c(are)h
(susceptible)e(to)h(recei)o(v)o(e.)k(Section)c(3)g(discusses)h(ho)o(w)e
(de-)-91 490 y(pendence)f(graphs)g(are)h(used)f(to)f(document)g
(programs)h(in)f(dif)o(ferent)-91 540 y(ways.)21 b(Finally)12
b(Section)g(4)h(concludes)g(with)f(the)h(main)g(perspec-)-91
589 y(ti)o(v)o(es)d(of)g(this)f(research.)-91 704 y Fn(2.)k(Annotating)
d(dependence)h(graphs)-41 811 y Fq(In)16 b(this)g(section,)i(we)f
(present)f(our)g(system)h(to)f(manage)i(and)-91 861 y(display)12
b(dependence)j(graphs:)j(we)c(\002rst)f(introduce)f(our)h(v)o(ersion)
-91 911 y(of)j(dependence)i(graphs;)h(then)e(we)g(sho)o(w)f(ho)o(w)h
(hierarchies)g(of)-91 961 y(groups)10 b(are)i(b)o(uilt)d(and)i(ho)o(w)f
(this)h(allo)o(ws)f(to)g(display)g(dependence)-91 1010
y(graphs)16 b(at)h(dif)o(ferent)f(le)o(v)o(els)h(of)g(abstraction;)i
(we)e(then)f(discuss)-91 1060 y(ho)o(w)8 b(these)h(hierarchies)g(can)g
(be)g(re\002ned)g(to)f(represent)h(conceptual)-91 1110
y(units,)k(this)f(way)h(making)f(visible)g(objects)h(that)f(are)i(not)e
(directly)-91 1160 y(represented)d(in)f(the)h(source)h(code;)f
(\002nally)f(we)h(discuss)g(ho)o(w)g(these)-91 1210 y(units)g(as)i
(well)f(as)h(nodes)f(or)g(v)o(ariables)g(can)h(be)g(annotated.)-91
1312 y Fi(2.1.)h(Dependence)i(graphs)-41 1415 y Fq(Se)o(v)o(eral)g
(formalisms)g(ha)o(v)o(e)g(been)g(used)g(to)f(represent)h(depen-)-91
1465 y(dences,)e(like:)h Fm(pr)n(ogr)o(am)e(dependence)h(gr)o(aphs)e
Fq([10])h(that)f(include)-91 1514 y(control)j(and)h(data)h(dependences)
g(for)f(a)h(single)f(procedure;)i Fm(sys-)-91 1564 y(tem)g(dependence)i
(gr)o(aphs)e Fq([8])g(that)g(are)h(program)f(dependence)-91
1614 y(graphs)9 b(e)o(xtended)h(to)f(handle)h(function)e(calls,)i(ar)o
(guments)g(and)g(re-)-91 1664 y(turned)g(v)o(alues;)h
Fm(value)g(dependence)h(gr)o(aphs)f Fq([15)o(])g(that)f(represent)-91
1714 y(computations)h(of)h(a)h(procedure)f(solely)f(as)i(v)o(alue)g
(\003o)o(w)m(,)g(with)e(ad-)-91 1763 y(ditional)e(representations)i(to)
g(handle)g(control)g(information.)k(The)-91 1813 y(dependence)f(graphs)
e(we)h(use)h(are)f(a)g(simpli\002ed)f(v)o(ersion)h(of)f(sys-)-91
1863 y(tem)h(dependence)h(graphs)e(we)i(tuned)e(for)g(our)h(project;)g
(we)g(refer)-91 1913 y(to)c(them)i(simply)e(as)i Fm(dependence)h(gr)o
(aphs)p Fq(.)-41 1963 y(A)h(dependence)i(graph)e(contains)g
(information)e(both)i(on)g(data)-91 2012 y(and)18 b(control)f
(dependences)i(and)f(inte)o(grates)g(all)g(the)g(functions)-91
2062 y(of)13 b(the)g(corresponding)f(program)413 2047
y Fl(3)431 2062 y Fq(.)22 b(Control)11 b(dependence)j(links)-91
2112 y(connect)19 b(tests)f(of)g(loops)g(or)g(conditional)f(statements)
i(and)f(the)-91 2162 y(statements)12 b(occuring)g(in)g(the)g
(corresponding)f(bodies.)18 b(Data)13 b(de-)-91 2212
y(pendence)h(links)e(connect)i(statements)f(with)f(v)o(ariables)i(the)o
(y)f(up-)-91 2262 y(date)j(and)f(then)g(these)h(v)o(ariables)g(with)e
(e)o(v)o(ery)i(statement)g(where)-91 2311 y(the)o(y)11
b(are)g(used.)k(Such)c(a)h(kind)d(of)i(connection)f(is)g(also)h(used)g
(when)-91 2361 y(the)f(v)o(ariable)f(is)h(updated)f(and)h(used)g(in)g
(dif)o(ferent)f(functions,)f(e)o(v)o(en)-91 2411 y(when)15
b(transmitted)f(as)i(a)g(parameter)473 2396 y Fl(4)491
2411 y Fq(.)28 b(Both)14 b(kinds)g(of)h(depen-)-91 2461
y(dences)e(are)g(computed)f(by)g(the)g(front-end)f(of)g(the)h(system)h
(Canto)-91 2511 y([1)o(])f(that)g(inte)o(grates)g(a)h(po)o(werful)e
(algorithm)g(of)h(pointer)e(analysis)p -91 2545 394 2
v -49 2572 a Fk(3)-31 2583 y Fj(Currently)n(,)d(we)h(don')o(t)g(handle)
f(recursi)o(ve)g(functions.)-49 2611 y Fk(4)-31 2623
y Fj(Actually)n(,)i(we)g(don')o(t)g(represent)f(entry)g(point)h(and)f
(parameters)g(of)h(functions,)-91 2663 y(these)e(ones)h(are)f(treated)h
(as)g(if)h(they)e(were)g(inlined.)987 42 y Fq(ensuring)i(the)h(accurac)
o(y)h(of)f(the)g(deri)o(v)o(ed)g(dependences.)k(The)c(cor)o(-)987
91 y(responding)d(graph)h(is)g(then)g(displayed)g(using)g(the)g
Fh(Tcldot)g Fq(package)987 141 y([9].)987 263 y Fg(#1)76
b(int)13 b(absolut)q(e_v)q(al)q(\(i)q(nt)j(x\);)987 288
y(#2)76 b(void)14 b(print_res)q(ul)q(t\()q(in)q(t)i(nb,)d(float)i
(aver,)g(int)f(*tab\);)987 337 y(#4)76 b(main\(\))15
b({)987 362 y(#5)76 b(int)13 b(i,)h(nb_neg,)h(tot_neg)q(;)987
387 y(#6)76 b(float)14 b(aver_neg)q(;)987 437 y(#8)76
b(int)13 b(tab_num)q(ber)q(s[)q(15)q(])j(=)d({)f(12,)i(-5,)g(7,)f(3,)h
(-89,)g(-45,)g(-6,)g(9,)f(10,)h(-1,)g(0)f(};)987 462
y(#9)76 b(int)13 b(tab_abs)q([15)q(];)987 512 y(#11)163
b(i)13 b(=)g(0;)987 537 y(#12)163 b(tot_neg)16 b(=)d(0;)987
561 y(#13)163 b(nb_neg)15 b(=)e(0;)987 586 y(#14)163
b(while)15 b(\(tab_num)q(ber)q(s[)q(i])h(!=)e(0\))f({)987
611 y(#15)263 b(tab_abs[i)q(])16 b(=)d(absolute_)q(va)q(l\()q(tab)q(_n)
q(um)q(be)q(rs)q([i])q(\);)987 636 y(#16)263 b(if)13
b(\(tab_num)q(be)q(rs)q([i)q(])i(<)e(0\))h({)987 661
y(#17)362 b(tot_neg)16 b(+=)d(tab_num)q(ber)q(s[)q(i])q(;)987
686 y(#18)362 b(nb_neg)16 b(++;)987 711 y(#19)362 b(})987
736 y(#20)263 b(i++;)987 761 y(#21)g(})987 786 y(#22)163
b(tab_abs[)q(i])16 b(=)d(0;)987 835 y(#24)163 b(aver_neg)16
b(=)d(\(float\)t)q(ot)q(_n)q(eg)j(/)d(\(float\)nb)q(_n)q(eg)q(;)987
885 y(#26)163 b(print_re)q(su)q(lt)q(\(n)q(b_n)q(eg)q(,)16
b(aver_neg,)g(tab_abs\))q(;)987 935 y(#28)64 b(})987
985 y(#30)g(int)13 b(absolut)q(e_v)q(al)j(\(int)f(x\))e({)987
1035 y(#32)163 b(if)14 b(\(x)f(>)g(0\))987 1060 y(#33)263
b(return\(x\))q(;)987 1085 y(#34)163 b(return\(-)q(x\))q(;)987
1109 y(#35)64 b(})987 1159 y(#37)g(void)14 b(print_res)q(ul)q(t\()q(in)
q(t)i(nb,)d(float)i(aver,)g(int)f(*tab\))g({)987 1184
y(#38)64 b(int)13 b(i;)987 1234 y(#40)163 b(printf)15
b(\("\045d)g(numbers)g(of)f(tab_numbe)q(rs)i(are)e(negative\\)q(n")q(,)
i(nb\);)987 1259 y(#41)163 b(printf)15 b(\("Avera)q(ge)h(value)f(is)e
(\045f\\n",)i(aver\);)987 1309 y(#43)163 b(i)13 b(=)g(0;)987
1334 y(#44)163 b(while)15 b(\(tab[i])h(!=)d(0\))g({)987
1358 y(#45)263 b(printf)15 b(\("\045d\\n",)h(tab[i]\);)987
1383 y(#46)263 b(i++;)987 1408 y(#47)g(})987 1433 y(#48)64
b(})1053 1566 y Ff(Figure)13 b(1.)e(Sour)o(ce)h(code)h(of)e(a)h(sample)
g(pr)o(ogram)1037 1678 y Fq(No)o(w)g(let)g(us)g(take)g(a)h(small)g(e)o
(xample)g(program,)g(designed)f(for)987 1728 y(this)e(presentation,)g
(gi)o(v)o(en)g(in)g(Fig.)j(1:)g(it)c(takes)i(as)g(initial)e(v)o(alue)h
(an)987 1778 y(array)k(containing)e(positi)o(v)o(e)h(and)g(ne)o(gati)o
(v)o(e)h(numbers,)h(puts)e(their)987 1827 y(absolute)f(v)o(alues)h(in)f
(another)g(array)h(and)f(computes)h(the)g(a)o(v)o(erage)987
1877 y(of)d(the)h(ne)o(gati)o(v)o(e)f(numbers;)h(at)f(the)h(end,)g
(both)e(the)i(ne)o(w)f(array)h(and)987 1927 y(the)g(a)o(v)o(erage)j
(are)e(printed.)k(The)c(dependence)g(graph,)g(in)f(the)h(way)987
1977 y(we)f(represent)f(it,)g(is)g(sho)o(wn)g(in)g(Fig.)i(2.)1037
2032 y(Ev)o(ery)d(statement)g(is)f(labeled)h(in)f(this)f(e)o(xample)j
(with)d(a)i(number)987 2081 y(that)f(corresponds)g(to)g(its)g(position)
f(in)h(the)g(source)h(\002le)1776 2066 y Fl(5)1804 2081
y Fq(and)f(repre-)987 2131 y(sented)i(in)f(a)h(black)g(ellipse)f(while)
g(v)o(ariables)g(are)i(in)e(gre)o(y)g(ellipses.)987 2181
y(Data)15 b(dependences)g(are)h(dra)o(wn)e(with)g(two)f(black)h(arro)o
(ws)h(each,)987 2231 y(one)9 b(from)g(the)g(statement)h(where)f(the)g
(v)o(ariable)g(is)g(set)h(or)f(modi\002ed)987 2281 y(to)i(the)g(v)o
(ariable)g(and)h(the)f(second)h(one)f(from)g(this)g(v)o(ariable)g(to)g
(the)987 2331 y(statement)e(where)g(it)f(is)g(used.)13
b(F)o(or)c(e)o(xample,)i(to)o(wards)c(the)i(middle)987
2380 y(of)g(the)h(right)e(of)i(the)f(graph,)h(there)g(is)g(an)g(arro)o
(w)g(from)f(node)h Fh(#24)f Fq(to)987 2430 y(v)o(ariable)k
Fh(a)o(v)o(er)p 1204 2437 11 2 v 10 w(neg)f Fq(because)j(this)d(v)o
(ariable)g(is)h(set)g(on)g(line)f(24)h(of)987 2480 y(the)e(program,)h
(and)g(then)f(an)h(arro)o(w)f(from)g Fh(a)o(v)o(er)p
1688 2487 V 11 w(neg)g Fq(to)g(node)g Fh(#41)987 2530
y Fq(because)h(in)d(this)h(line)f(the)h(v)o(alue)h(of)f(v)o(ariable)g
Fh(a)o(v)o(er)p 1734 2537 V 10 w(neg)g Fq(is)g(used.)p
987 2585 394 2 v 1029 2611 a Fk(5)1047 2623 y Fj(They)f(are)g(usualy)g
(numbered)f(according)h(to)h(their)g(position)f(in)h(the)g(abstract)987
2662 y(syntax)d(tree.)930 2787 y Fq(2)p eop
%%Page: 3 3
3 2 bop 311 1516 a @beginspecial 155 @llx 234 @lly 457
@urx 559 @ury 3020 @rwi @setspecial
%%BeginDocument: Src/Dot/depg-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
154 233 303 326 boxprim clip newpath
155 234 translate
0 0 1 beginpage
0.2903 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#11
gsave 10 dict begin
369 1098 27 18 ellipse_path
stroke
gsave 10 dict begin
369 1099 moveto (#11) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
369 1026 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
369 1027 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#11 -> i_#11
newpath 369 1080 moveto
369 1072 369 1063 369 1054 curveto
stroke
newpath 367 1054 moveto
369 1044 lineto
372 1054 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#15
gsave 10 dict begin
321 522 27 18 ellipse_path
stroke
gsave 10 dict begin
321 523 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #15
newpath 342 1024 moveto
259 1017 10 989 10 882 curveto
10 882 10 882 10 666 curveto
10 575 207 537 287 526 curveto
stroke
newpath 284 524 moveto
294 525 lineto
284 529 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#17
gsave 10 dict begin
787 666 27 18 ellipse_path
stroke
gsave 10 dict begin
787 667 moveto (#17) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #17
newpath 395 1022 moveto
489 1005 799 946 800 882 curveto
800 882 800 882 800 810 curveto
799 778 794 726 790 694 curveto
stroke
newpath 788 694 moveto
789 684 lineto
792 694 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#20
gsave 10 dict begin
295 954 27 18 ellipse_path
stroke
gsave 10 dict begin
295 955 moveto (#20) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #20
newpath 354 1011 moveto
343 1001 329 987 317 975 curveto
stroke
newpath 316 977 moveto
310 969 lineto
319 974 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#22
gsave 10 dict begin
788 378 27 18 ellipse_path
stroke
gsave 10 dict begin
788 379 moveto (#22) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #22
newpath 396 1023 moveto
506 1012 917 963 918 882 curveto
918 882 918 882 918 522 curveto
917 476 853 424 815 396 curveto
stroke
newpath 814 398 moveto
807 391 lineto
817 394 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#33
gsave 10 dict begin
221 666 27 18 ellipse_path
stroke
gsave 10 dict begin
221 667 moveto (#33) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #33
newpath 343 1022 moveto
308 1015 249 1000 230 972 curveto
184 901 163 800 190 720 curveto
193 712 199 701 205 691 curveto
stroke
newpath 203 690 moveto
210 682 lineto
207 692 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#34
gsave 10 dict begin
293 666 27 18 ellipse_path
stroke
gsave 10 dict begin
293 667 moveto (#34) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #34
newpath 376 1008 moveto
401 947 479 743 442 720 curveto
427 711 364 689 325 677 curveto
stroke
newpath 325 680 moveto
317 674 lineto
327 675 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#14
gsave 10 dict begin
369 810 27 18 ellipse_path
stroke
gsave 10 dict begin
369 811 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #14
newpath 369 1008 moveto
369 970 369 882 369 837 curveto
stroke
newpath 367 838 moveto
369 828 lineto
372 838 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#16
gsave 10 dict begin
707 738 27 18 ellipse_path
stroke
gsave 10 dict begin
707 739 moveto (#16) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #16
newpath 395 1020 moveto
433 1011 503 993 539 972 curveto
599 935 652 885 694 828 curveto
704 813 706 786 707 765 curveto
stroke
newpath 705 766 moveto
707 756 lineto
710 766 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#32
gsave 10 dict begin
255 738 27 18 ellipse_path
stroke
gsave 10 dict begin
255 739 moveto (#32) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #32
newpath 345 1018 moveto
318 1008 276 990 256 972 curveto
213 930 236 814 248 763 curveto
stroke
newpath 245 765 moveto
250 756 lineto
250 766 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#12
gsave 10 dict begin
859 810 27 18 ellipse_path
stroke
gsave 10 dict begin
859 811 moveto (#12) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tot_neg_#12
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
859 738 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
859 739 moveto (tot_neg) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#12 -> tot_neg_#12
newpath 859 792 moveto
859 784 859 775 859 766 curveto
stroke
newpath 857 766 moveto
859 756 lineto
862 766 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#12 -> #17
newpath 843 722 moveto
833 712 820 699 809 688 curveto
stroke
newpath 807 690 moveto
802 681 lineto
811 686 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#24
gsave 10 dict begin
787 522 27 18 ellipse_path
stroke
gsave 10 dict begin
787 523 moveto (#24) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tot_neg_#12 -> #24
newpath 857 720 moveto
853 687 843 615 830 576 curveto
827 566 818 555 809 545 curveto
stroke
newpath 807 546 moveto
802 537 lineto
810 543 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#13
gsave 10 dict begin
555 810 27 18 ellipse_path
stroke
gsave 10 dict begin
555 811 moveto (#13) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
631 738 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
631 739 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	#13 -> nb_neg_#13
newpath 571 795 moveto
582 785 596 771 608 760 curveto
stroke
newpath 606 758 moveto
615 753 lineto
610 762 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#18
gsave 10 dict begin
631 666 27 18 ellipse_path
stroke
gsave 10 dict begin
631 667 moveto (#18) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13 -> #18
newpath 631 720 moveto
631 712 631 703 631 694 curveto
stroke
newpath 629 694 moveto
631 684 lineto
634 694 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#13 -> #24
newpath 649 723 moveto
663 712 680 696 689 684 curveto
712 650 723 610 744 576 curveto
747 571 758 556 769 544 curveto
stroke
newpath 766 544 moveto
774 538 lineto
770 547 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#40
gsave 10 dict begin
660 522 27 18 ellipse_path
stroke
gsave 10 dict begin
660 523 moveto (#40) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13 -> #40
newpath 644 721 moveto
654 708 668 689 670 684 curveto
681 649 679 611 674 576 curveto
673 569 671 559 668 550 curveto
stroke
newpath 665 550 moveto
665 540 lineto
670 549 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#15
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
747 450 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
747 451 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#15 -> i_#15
newpath 347 518 moveto
421 505 632 469 714 455 curveto
stroke
newpath 711 453 moveto
721 454 lineto
711 458 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#15
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
438 450 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
438 451 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#15 -> tab_abs_#15
newpath 341 510 moveto
360 498 388 481 408 468 curveto
stroke
newpath 406 466 moveto
416 463 lineto
409 470 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#15 -> #22
newpath 757 433 moveto
762 425 768 414 773 404 curveto
stroke
newpath 771 403 moveto
778 395 lineto
775 405 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#15 -> #22
newpath 467 444 moveto
532 430 688 399 756 384 curveto
stroke
newpath 752 382 moveto
762 383 lineto
753 387 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#17
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
787 594 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
787 595 moveto (tot_neg) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#17 -> tot_neg_#17
newpath 781 648 moveto
780 640 780 631 780 622 curveto
stroke
newpath 778 622 moveto
781 612 lineto
782 622 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#17 -> #17
newpath 794 638 moveto
794 629 794 620 793 612 curveto
stroke
newpath 796 638 moveto
793 648 lineto
792 638 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#17 -> #24
newpath 787 576 moveto
787 568 787 559 787 550 curveto
stroke
newpath 785 550 moveto
787 540 lineto
790 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
631 594 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
631 595 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	#18 -> nb_neg_#18
newpath 625 648 moveto
624 640 624 631 624 622 curveto
stroke
newpath 622 622 moveto
625 612 lineto
626 622 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18 -> #18
newpath 638 638 moveto
638 629 638 620 637 612 curveto
stroke
newpath 640 638 moveto
637 648 lineto
636 638 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18 -> #24
newpath 655 583 moveto
683 570 729 549 759 535 curveto
stroke
newpath 755 534 moveto
765 532 lineto
757 539 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18 -> #40
newpath 638 576 moveto
642 568 646 558 650 549 curveto
stroke
newpath 647 549 moveto
653 540 lineto
652 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
276 882 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
276 883 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#20 -> i_#20
newpath 285 937 moveto
282 929 279 919 277 909 curveto
stroke
newpath 275 910 moveto
275 900 lineto
280 909 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #15
newpath 256 869 moveto
232 853 193 828 193 828 curveto
157 752 128 639 182 576 curveto
203 552 254 536 288 529 curveto
stroke
newpath 285 527 moveto
295 527 lineto
286 532 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #17
newpath 281 864 moveto
292 826 322 741 364 720 curveto
455 673 568 697 670 684 curveto
693 681 728 676 755 671 curveto
stroke
newpath 751 669 moveto
761 670 lineto
752 674 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #20
newpath 295 930 moveto
293 920 290 908 286 899 curveto
stroke
newpath 297 926 moveto
296 936 lineto
292 927 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #33
newpath 257 869 moveto
242 858 222 841 213 828 curveto
195 796 194 755 201 720 curveto
203 713 207 702 210 693 curveto
stroke
newpath 208 692 moveto
214 684 lineto
212 694 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #34
newpath 264 866 moveto
239 832 187 753 216 720 curveto
227 707 247 694 264 683 curveto
stroke
newpath 262 681 moveto
272 678 lineto
265 685 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #14
newpath 294 868 moveto
308 857 328 841 344 829 curveto
stroke
newpath 341 828 moveto
351 824 lineto
344 832 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #16
newpath 303 879 moveto
364 873 514 855 594 828 curveto
624 818 664 781 687 758 curveto
stroke
newpath 683 758 moveto
692 753 lineto
687 762 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #32
newpath 270 864 moveto
265 853 261 838 259 828 curveto
256 812 255 785 255 765 curveto
stroke
newpath 253 766 moveto
255 756 lineto
258 766 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#22
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
835 306 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
835 307 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#22 -> tab_abs_#22
newpath 799 361 moveto
805 352 812 341 819 331 curveto
stroke
newpath 817 330 moveto
824 323 lineto
821 333 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44
gsave 10 dict begin
911 234 27 18 ellipse_path
stroke
gsave 10 dict begin
911 235 moveto (#44) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_abs_#22 -> #44
newpath 851 290 moveto
862 280 877 267 888 255 curveto
stroke
newpath 886 254 moveto
895 249 lineto
889 257 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#45
gsave 10 dict begin
910 18 27 18 ellipse_path
stroke
gsave 10 dict begin
910 19 moveto (#45) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_abs_#22 -> #45
newpath 840 288 moveto
852 238 889 101 903 43 curveto
stroke
newpath 900 45 moveto
905 36 lineto
905 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	aver_neg_#24
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
982 450 36 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
982 451 moveto (aver_neg) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	#24 -> aver_neg_#24
newpath 811 513 moveto
845 501 905 478 945 464 curveto
stroke
newpath 943 462 moveto
953 461 lineto
945 467 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#41
gsave 10 dict begin
941 378 27 18 ellipse_path
stroke
gsave 10 dict begin
941 379 moveto (#41) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	aver_neg_#24 -> #41
newpath 972 433 moveto
967 424 961 413 956 404 curveto
stroke
newpath 954 405 moveto
951 395 lineto
958 403 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#33
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
221 594 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
221 595 moveto (retval) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	#33 -> retval_#33
newpath 221 648 moveto
221 640 221 631 221 622 curveto
stroke
newpath 219 622 moveto
221 612 lineto
224 622 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#33 -> #15
newpath 240 580 moveto
256 570 278 553 296 540 curveto
stroke
newpath 293 539 moveto
303 535 lineto
296 543 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#34
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
293 594 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
293 595 moveto (retval) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	#34 -> retval_#34
newpath 293 648 moveto
293 640 293 631 293 622 curveto
stroke
newpath 291 622 moveto
293 612 lineto
296 622 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#34 -> #15
newpath 300 577 moveto
303 568 307 558 311 548 curveto
stroke
newpath 308 548 moveto
314 539 lineto
313 549 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#43
gsave 10 dict begin
1013 378 27 18 ellipse_path
stroke
gsave 10 dict begin
1013 379 moveto (#43) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#43
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
997 306 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
997 307 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#43 -> i_#43
newpath 1009 360 moveto
1007 352 1005 342 1003 333 curveto
stroke
newpath 1001 334 moveto
1001 324 lineto
1006 333 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#46
gsave 10 dict begin
966 162 27 18 ellipse_path
stroke
gsave 10 dict begin
966 163 moveto (#46) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#43 -> #46
newpath 993 288 moveto
988 263 978 218 972 189 curveto
stroke
newpath 970 190 moveto
970 180 lineto
975 189 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#43 -> #44
newpath 980 292 moveto
967 281 949 266 935 254 curveto
stroke
newpath 934 256 moveto
928 248 lineto
937 253 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#43 -> #45
newpath 1000 288 moveto
1008 242 1024 122 986 72 curveto
976 59 956 45 939 35 curveto
stroke
newpath 938 37 moveto
931 30 lineto
941 33 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
947 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
947 91 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#46 -> i_#46
newpath 956 145 moveto
953 137 950 127 948 117 curveto
stroke
newpath 946 118 moveto
946 108 lineto
951 117 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46 -> #46
newpath 966 138 moveto
964 128 961 116 957 107 curveto
stroke
newpath 968 134 moveto
967 144 lineto
963 135 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46 -> #44
newpath 915 210 moveto
918 189 922 161 927 144 curveto
929 134 935 119 940 107 curveto
stroke
newpath 918 207 moveto
914 216 lineto
913 206 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46 -> #45
newpath 938 73 moveto
933 65 928 54 923 44 curveto
stroke
newpath 921 45 moveto
919 35 lineto
925 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#8
gsave 10 dict begin
500 954 27 18 ellipse_path
stroke
gsave 10 dict begin
500 955 moveto (#8) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
500 882 46 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
500 883 moveto (tab_numbers) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	#8 -> tab_numbers_#8
newpath 500 936 moveto
500 928 500 919 500 910 curveto
stroke
newpath 498 910 moveto
500 900 lineto
503 910 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #15
newpath 529 868 moveto
551 857 579 842 594 828 curveto
602 819 599 802 594 792 curveto
544 704 404 588 347 542 curveto
stroke
newpath 346 544 moveto
339 536 lineto
349 540 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #17
newpath 545 879 moveto
597 871 648 851 694 828 curveto
734 807 765 732 778 692 curveto
stroke
newpath 775 692 moveto
781 684 lineto
780 694 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #33
newpath 497 864 moveto
492 828 476 747 442 720 curveto
393 679 316 699 254 684 curveto
252 683 250 683 247 682 curveto
stroke
newpath 248 686 moveto
241 678 lineto
251 681 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #34
newpath 504 864 moveto
513 823 533 728 513 720 curveto
463 700 374 681 326 672 curveto
stroke
newpath 329 675 moveto
319 671 lineto
329 670 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #14
newpath 473 867 moveto
452 855 420 838 398 826 curveto
stroke
newpath 398 829 moveto
390 822 lineto
400 824 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #16
newpath 541 873 moveto
579 864 635 848 665 828 curveto
681 817 693 786 700 764 curveto
stroke
newpath 697 765 moveto
702 756 lineto
702 766 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #32
newpath 460 873 moveto
421 863 363 847 330 828 curveto
320 822 293 786 273 762 curveto
stroke
newpath 271 764 moveto
267 754 lineto
275 761 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#14 -> #15
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 366 792 moveto
357 742 334 605 325 547 curveto
stroke
newpath 323 550 moveto
324 540 lineto
328 550 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#14 -> #20
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 307 931 moveto
322 902 347 853 360 827 curveto
stroke
newpath 311 929 moveto
304 937 lineto
306 927 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#14 -> #16
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 396 806 moveto
454 796 595 772 674 756 curveto
676 755 678 755 681 754 curveto
stroke
newpath 677 753 moveto
687 750 lineto
680 758 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#14 -> #32
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 349 797 moveto
330 785 303 768 283 756 curveto
stroke
newpath 282 758 moveto
275 751 lineto
285 754 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#30
gsave 10 dict begin
403 738 27 18 ellipse_path
stroke
gsave 10 dict begin
403 739 moveto (#30) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	#14 -> #30
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 377 793 moveto
381 784 386 774 391 764 curveto
stroke
newpath 389 763 moveto
395 755 lineto
393 765 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#16 -> #17
gsave 10 dict begin
dotted
0.000 0.000 0.753 edgecolor
newpath 723 723 moveto
735 713 751 698 764 687 curveto
stroke
newpath 762 686 moveto
771 681 lineto
765 689 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#16 -> #18
gsave 10 dict begin
dotted
0.000 0.000 0.753 edgecolor
newpath 691 723 moveto
680 713 666 699 654 687 curveto
stroke
newpath 653 689 moveto
647 681 lineto
656 686 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#32 -> #33
gsave 10 dict begin
dotted
0.000 0.000 0.753 edgecolor
newpath 247 721 moveto
243 712 238 702 233 692 curveto
stroke
newpath 231 693 moveto
229 683 lineto
235 691 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#32 -> #34
gsave 10 dict begin
dotted
newpath 264 721 moveto
269 713 274 702 280 692 curveto
stroke
newpath 278 691 moveto
284 683 lineto
282 693 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#44 -> #46
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 923 218 moveto
930 208 940 196 948 186 curveto
stroke
newpath 946 185 moveto
954 178 lineto
950 188 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#44 -> #45
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 911 216 moveto
911 178 910 90 910 45 curveto
stroke
newpath 908 46 moveto
910 36 lineto
913 46 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 432 1608 a Ff(Figure)12 b(2.)f(Dependence)j(graph)f(of)e
(the)h(sample)g(pr)o(ogram)263 2441 y @beginspecial 36
@llx 36 @lly 361 @urx 158 @ury 3250 @rwi @setspecial
%%BeginDocument: Src/Dot/hier-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 326 123 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0.3059 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	main-level
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 807 396 moveto
753 396 lineto
753 360 lineto
807 360 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
780 379 moveto (main) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 363 324 moveto
309 324 lineto
309 288 lineto
363 288 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
336 307 moveto (loop-1) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> loop-1
newpath 753 374 moveto
675 361 456 325 370 311 curveto
stroke
newpath 373 314 moveto
363 310 lineto
373 309 lineto
closepath
gsave 0 setgray stroke grestore fill

%	print_result
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 627 324 moveto
549 324 lineto
549 288 lineto
627 288 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
588 307 moveto (print_result) 64 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> print_result
newpath 753 368 moveto
722 357 672 338 635 324 curveto
stroke
newpath 635 327 moveto
627 321 lineto
637 322 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#24
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
672 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
672 307 moveto (#24) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #24
newpath 753 360 moveto
737 349 715 335 698 324 curveto
stroke
newpath 698 327 moveto
691 319 lineto
701 323 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#22
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
744 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
744 307 moveto (#22) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #22
newpath 771 360 moveto
766 352 761 341 756 332 curveto
stroke
newpath 754 333 moveto
752 323 lineto
758 331 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#13
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
816 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
816 307 moveto (#13) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #13
newpath 789 360 moveto
794 352 799 341 804 332 curveto
stroke
newpath 802 331 moveto
808 323 lineto
806 333 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#12
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
888 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
888 307 moveto (#12) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #12
newpath 807 360 moveto
823 349 845 335 862 324 curveto
stroke
newpath 859 323 moveto
869 319 lineto
862 327 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#11
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
960 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
960 307 moveto (#11) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #11
newpath 807 368 moveto
840 357 894 337 927 324 curveto
929 323 931 322 933 321 curveto
stroke
newpath 929 320 moveto
939 318 lineto
931 325 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#8
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
1032 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
1032 307 moveto (#8) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #8
newpath 807 372 moveto
853 361 946 339 999 324 curveto
1001 323 1003 323 1006 322 curveto
stroke
newpath 1002 321 moveto
1012 318 lineto
1005 326 lineto
closepath
gsave 0 setgray stroke grestore fill

%	absolute_val
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 155 252 moveto
71 252 lineto
71 216 lineto
155 216 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
113 235 moveto (absolute_val) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> absolute_val
newpath 309 297 moveto
272 286 206 264 161 250 curveto
stroke
newpath 164 254 moveto
155 248 lineto
165 249 lineto
closepath
gsave 0 setgray stroke grestore fill

%	alt-3
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 255 252 moveto
201 252 lineto
201 216 lineto
255 216 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
228 235 moveto (alt-2) 25 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> alt-3
newpath 309 288 moveto
295 279 278 267 263 257 curveto
stroke
newpath 262 259 moveto
255 252 lineto
265 255 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#14
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
300 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
300 235 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> #14
newpath 327 288 moveto
322 280 317 269 312 260 curveto
stroke
newpath 310 261 moveto
308 251 lineto
314 259 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#15
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
372 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
372 235 moveto (#15) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> #15
newpath 345 288 moveto
350 280 355 269 360 260 curveto
stroke
newpath 358 259 moveto
364 251 lineto
362 261 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#20
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
444 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
444 235 moveto (#20) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> #20
newpath 363 288 moveto
379 277 401 263 418 252 curveto
stroke
newpath 415 251 moveto
425 247 lineto
418 255 lineto
closepath
gsave 0 setgray stroke grestore fill

%	alt-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 126 180 moveto
72 180 lineto
72 144 lineto
126 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 163 moveto (alt-1) 25 14.00 -0.50 alignedtext
end grestore
end grestore

%	absolute_val -> alt-1
newpath 109 216 moveto
108 208 106 198 104 190 curveto
stroke
newpath 102 190 moveto
102 180 lineto
106 189 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#32
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
27 90 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
27 91 moveto (#32) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-1 -> #32
newpath 81 144 moveto
71 134 59 122 49 112 curveto
stroke
newpath 47 114 moveto
42 105 lineto
51 110 lineto
closepath
gsave 0 setgray stroke grestore fill

%	then-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 126 108 moveto
72 108 lineto
72 72 lineto
126 72 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 91 moveto (then-1) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-1 -> then-1
newpath 99 144 moveto
99 136 99 127 99 118 curveto
stroke
newpath 97 118 moveto
99 108 lineto
102 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	else-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 198 108 moveto
144 108 lineto
144 72 lineto
198 72 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
171 91 moveto (else-1) 33 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-1 -> else-1
newpath 117 144 moveto
126 135 137 124 146 115 curveto
stroke
newpath 144 113 moveto
153 108 lineto
148 117 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#33
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
99 18 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 19 moveto (#33) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	then-1 -> #33
newpath 99 72 moveto
99 64 99 55 99 46 curveto
stroke
newpath 97 46 moveto
99 36 lineto
102 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#34
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
171 18 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
171 19 moveto (#34) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	else-1 -> #34
newpath 171 72 moveto
171 64 171 55 171 46 curveto
stroke
newpath 169 46 moveto
171 36 lineto
174 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#16
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
171 162 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
171 163 moveto (#16) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-3 -> #16
newpath 214 216 moveto
207 207 198 195 190 185 curveto
stroke
newpath 189 187 moveto
184 178 lineto
192 184 lineto
closepath
gsave 0 setgray stroke grestore fill

%	then-3
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 270 180 moveto
216 180 lineto
216 144 lineto
270 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
243 163 moveto (then-2) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-3 -> then-3
newpath 232 216 moveto
233 208 235 198 237 190 curveto
stroke
newpath 235 189 moveto
239 180 lineto
239 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	else-3
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 342 180 moveto
288 180 lineto
288 144 lineto
342 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
315 163 moveto (else-2) 33 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-3 -> else-3
newpath 250 216 moveto
261 207 274 196 286 186 curveto
stroke
newpath 284 185 moveto
293 180 lineto
287 188 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#17
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
243 90 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
243 91 moveto (#17) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	then-3 -> #17
newpath 243 144 moveto
243 136 243 127 243 118 curveto
stroke
newpath 241 118 moveto
243 108 lineto
246 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#18
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
315 90 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
315 91 moveto (#18) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	then-3 -> #18
newpath 261 144 moveto
271 134 283 122 293 112 curveto
stroke
newpath 291 110 moveto
300 105 lineto
295 114 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop-2
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 543 252 moveto
489 252 lineto
489 216 lineto
543 216 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
516 235 moveto (loop-2) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	print_result -> loop-2
newpath 570 288 moveto
561 279 550 268 541 259 curveto
stroke
newpath 539 261 moveto
534 252 lineto
543 257 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#43
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
588 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
588 235 moveto (#43) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	print_result -> #43
newpath 588 288 moveto
588 280 588 271 588 262 curveto
stroke
newpath 586 262 moveto
588 252 lineto
591 262 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#41
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
660 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
660 235 moveto (#41) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	print_result -> #41
newpath 606 288 moveto
616 278 628 266 638 256 curveto
stroke
newpath 636 254 moveto
645 249 lineto
640 258 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#40
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
732 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
732 235 moveto (#40) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	print_result -> #40
newpath 624 288 moveto
648 276 680 260 703 249 curveto
stroke
newpath 700 248 moveto
710 245 lineto
703 252 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
444 162 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
444 163 moveto (#44) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-2 -> #44
newpath 498 216 moveto
488 206 476 194 466 184 curveto
stroke
newpath 464 186 moveto
459 177 lineto
468 182 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#46
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
516 162 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
516 163 moveto (#46) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-2 -> #46
newpath 516 216 moveto
516 208 516 199 516 190 curveto
stroke
newpath 514 190 moveto
516 180 lineto
519 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#45
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
588 162 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
588 163 moveto (#45) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-2 -> #45
newpath 534 216 moveto
544 206 556 194 566 184 curveto
stroke
newpath 564 182 moveto
573 177 lineto
568 186 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 655 2533 a(Figure)g(3.)g(Resulting)f(hierar)o(ch)o(y)930
2787 y Fq(3)p eop
%%Page: 4 4
4 3 bop -41 42 a Fq(Control)7 b(dependences)j(are)g(dra)o(wn)f(with)f
(a)i(single)e(arro)o(w)h(from)-91 91 y(the)i(test)h(of)f(a)h(loop)f(or)
g(conditional)f(statement)i(to)f(an)o(y)h(statement)-91
141 y(controled)e(by)h(this)f(test;)h(the)g(appearence)i(of)e(the)g
(arro)o(w)g(depends)-91 191 y(on)i(the)g(kind)f(of)h(control:)k(it)12
b(is)h(gre)o(y)h(for)f(the)g(control)f(in)g(a)i(loop,)-91
241 y(gre)o(y)h(dotted)e(for)i(the)f(control)g(in)g(the)g
Fh(then)h Fq(branch)f(of)h(a)g(condi-)-91 291 y(tional)9
b(statement)i(and)g(black)g(dotted)f(in)g(the)h(corresponding)f
Fh(else)-91 340 y Fq(branch.)j(F)o(or)d(e)o(xample,)h(in)f(the)f(lo)o
(wer)h(right)e(corner)i(of)g(the)f(graph,)-91 390 y(node)j
Fh(#44)g Fq(is)h(the)f(test)h(of)f(the)h(loop)e(in)h(function)f
Fh(pr)q(int)p 718 397 11 2 v 11 w(result)i Fq(and)-91
440 y(controls)d(both)f(nodes)i Fh(#45)g Fq(and)f Fh(#46)p
Fq(;)h(on)f(the)h(contrary)f(node)h Fh(#32)-91 490 y
Fq(is)i(the)g(test)g(of)g(the)g Fh(if)h Fq(in)f(function)f
Fh(absolute)p 569 497 V 10 w(v)o(al)p Fq(,)i(node)f Fh(#33)g
Fq(is)g(in)-91 540 y(the)d Fh(then)g Fq(branch)g(and)h(node)f
Fh(#34)f Fq(in)h(the)g Fh(else)g Fq(branch.)-41 590 y(This)15
b(e)o(xample)h(clearly)f(sho)o(ws)g(that)f(e)o(v)o(en)i(for)e(a)i(v)o
(ery)f(small)-91 640 y(program)c(a)h(dependence)g(graph)f(is)g(comple)o
(x;)h(the)f(ne)o(xt)g(two)f(sec-)-91 690 y(tions)f(introduce)g(our)h
(mechanism)h(to)f(render)g(these)h(graphs)f(more)-91
740 y(readable.)-91 845 y Fi(2.2.)i(Structural)h(hierar)o(chies)-41
951 y Fq(In)g(our)g(tool,)g(nodes)h(are)g(automatically)f(grouped)f
(according)-91 1001 y(to)d(structural)g(criteria:)i(nodes)f(belonging)e
(to)h(a)i(loop)e(are)h(grouped)-91 1051 y(together)n(,)h(as)h(well)f
(as)h(nodes)g(belonging)d(to)i(the)g Fh(then)g Fq(or)g(the)h
Fh(else)-91 1100 y Fq(branch)h(of)g(a)h(conditional)d(statement,)j(and)
f(nodes)h(belonging)d(to)-91 1150 y(the)f(same)i(function)d
(de\002nition)381 1135 y Fl(6)400 1150 y Fq(.)14 b(If)d(a)g(loop)f
(contains)g(a)h(function)-91 1200 y(call,)e(the)f(group)f(representing)
g(this)h(function)e(is)i(grouped)f(with)g(the)-91 1250
y(other)i(nodes)i(of)f(the)g(loop;)f(in)g(the)h(same)i(manner)n(,)g(a)e
(loop)g(appear)o(-)-91 1300 y(ing)f(inside)g(the)h Fh(then)g
Fq(of)f(a)i(conditional)d(statement)i(is)g(represented)-91
1350 y(by)e(a)i(group)e(that)g(in)g(turn)g(is)h(grouped)f(with)g(the)h
(other)f(node)h(of)f(this)-91 1399 y(branch)i(to)g(form)g(a)h(single)e
(group)g(representing)h(the)g Fh(then)g Fq(clause.)-41
1450 y(Let)e(us)g(take)f(again)h(the)g(e)o(xample)h(gi)o(v)o(en)e(in)h
(Fig.)j(1.)i(The)8 b(groups)-91 1500 y(automatically)j(b)o(uilt)g(for)h
(this)f(program)h(are)i(visible)d(in)g(the)i(hier)o(-)-91
1549 y(archy)h(sho)o(wn)h(in)f(Fig.)25 b(3)15 b(where)g(box)o(es)g
(represent)g(groups)e(and)-91 1599 y(ellipses)g(nodes)g(\(v)o(ariables)
h(are)g(not)f(visible)f(in)h(this)g(representa-)-91 1649
y(tion\).)e(All)d(statements)h(of)f(the)h(loop)f(of)g(function)f
Fh(pr)q(int)p 705 1656 V 11 w(result)i Fq(ha)o(v)o(e)-91
1699 y(been)15 b(grouped)e(under)h(the)g(group)f Fh(loop-2)p
Fq(,)j(then)d(this)h(group)f(has)-91 1749 y(been)f(grouped)f(with)f
(the)i(other)f(statements)h(of)f(the)h(function)e(un-)-91
1798 y(der)k(the)f(group)g(labeled)h Fh(pr)q(int)p 358
1805 V 10 w(result)g Fq(which)g(is)f(in)g(turn)g(grouped)-91
1848 y(with)f Fh(loop-1)h Fq(and)g(the)f(remaining)h(statement)g(of)f
(function)g Fh(main)p Fq(.)-91 1898 y(Similar)g(groupings)f(ha)o(v)o(e)
j(been)f(done)g(to)f(represent)h(the)g(loop)f(of)-91
1948 y(function)g Fh(main)p Fq(,)i(labeled)g Fh(loop-1)p
Fq(:)k(it)12 b(contains)h(the)g(call)h(to)f(func-)-91
1998 y(tion)f Fh(absolute)p 129 2005 V 9 w(v)o(al)h Fq(and)h(a)g
(conditional)d(statement,)j(labeled)g Fh(alt-1)-91 2048
y Fq(and)h(containing)f(the)h(test)h(\(node)f Fh(#16)p
Fq(\),)h(the)g Fh(then)f Fq(and)g(the)h Fh(else)-91 2097
y Fq(branches.)-41 2148 y(The)i(construction)f(of)h(the)g(hierarchy)g
(is)g(done)g(once)g(when)-91 2198 y(loading)13 b(a)h(ne)o(w)h(program)f
(and)g(then)g(one)g(can)h(use)g(it)e(to)h(choose)-91
2247 y(ho)o(w)9 b(to)h(display)f(the)h(dependence)h(graph.)i(Suppose)d
(we)g(\002rst)g(dis-)-91 2297 y(play)e(in)f(our)h(GUI)g(the)g(graph)g
(sho)o(wn)g(in)g(Fig.)k(2.)g(By)c(shift-clicking)-91
2347 y(on)i(say)i(node)f Fh(#44)p Fq(,)g(in)f(the)h(lo)o(wer)g(right)f
(corner)h(of)g(the)f(graph,)i(we)-91 2397 y(ask)i(to)g
Fm(collapse)f Fq(this)g(node)h(together)f(with)g(the)g(other)h(nodes)g
(of)-91 2447 y(group)f Fh(loop-2)h Fq(\(see)h(Fig.)23
b(3\).)h(The)15 b(net)f(result)f(of)h(this)f(action)g(is)-91
2497 y(that)h(only)f Fh(loop-2)i Fq(remains)g(visible)e(\226)i(and)g
(dra)o(wn)f(as)i(a)f(box,)g(at)-91 2546 y(the)9 b(bottom)f(of)h(the)g
(graph)g(\226)g(while)g(all)g(its)f(content)h(is)g(hidden)f(\(see)p
-91 2585 394 2 v -49 2611 a Fk(6)-31 2623 y Fj(Actually)n(,)13
b(one)f(may)h(also)f(select)h(only)f(one)g(or)g(two)h(criteria)g(to)g
(b)o(uild)g(the)-91 2663 y(groups)6 b([3].)987 42 y Fq(Fig.)16
b(4\):)e(the)d(dependences)h(between)g Fh(#44)p Fq(,)f
Fh(#45)g Fq(and)g Fh(#46)g Fq(are)h(no)987 91 y(more)d(visible)e(while)
h(dependences)i(between)f(one)f(of)h(these)f(nodes)987
141 y(and)i(an)h(other)f(node)g(\226)g(for)g(e)o(xample)h(from)f
Fh(#43)g Fq(to)g Fh(#46)f Fq(\226)i(became)987 191 y(dependences)g
(between)f Fh(loop-2)g Fq(and)g(the)g(other)f(node)h(\226)f(from)h
Fh(#43)987 241 y Fq(to)g Fh(loop-2)g Fq(in)g(our)g(e)o(xample\226.)15
b(W)m(e)10 b(can)i(continue)d(this)h(process)h(by)987
291 y(collapsing)d(the)h(groups)f(that)g(are)i(under)e
Fh(loop-1)p Fq(,)i(be)o(ginning)d(at)j(the)987 340 y(bottom)f(and)h
(stopping)f(when)h Fh(loop-1)g Fq(is)h(collapsed)1755
325 y Fl(7)1774 340 y Fq(.)i(The)e(corre-)987 390 y(sponding)k(graph)h
(\(Fig.)30 b(5\),)18 b(sho)o(ws)f(the)f(program)g(at)g(a)h(higher)987
440 y(le)o(v)o(el)e(of)f(abstraction:)20 b(it)14 b(sho)o(ws)g(that)g
(it)g(basically)g(proceeds)h(in)987 490 y(two)e(steps,)i(\002rst)e
(computing)f(a)i(set)g(of)g(v)o(alues)f(\()p Fh(loop-1)p
Fq(\))h(that)f(are)987 540 y(then)d(used)g(in)g(the)g(second)h(step)f
(\()p Fh(loop-2)p Fq(\).)987 1545 y @beginspecial 180
@llx 287 @lly 433 @urx 505 @ury 2530 @rwi @setspecial
%%BeginDocument: Src/Dot/1-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
179 286 254 219 boxprim clip newpath
180 287 translate
0 0 1 beginpage
0.2414 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#11
gsave 10 dict begin
496 882 27 18 ellipse_path
stroke
gsave 10 dict begin
496 883 moveto (#11) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
496 810 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
496 811 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#11 -> i_#11
newpath 496 864 moveto
496 856 496 847 496 838 curveto
stroke
newpath 494 838 moveto
496 828 lineto
499 838 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#15
gsave 10 dict begin
420 306 27 18 ellipse_path
stroke
gsave 10 dict begin
420 307 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #15
newpath 470 806 moveto
385 794 124 756 124 756 curveto
78 742 10 714 10 666 curveto
10 666 10 666 10 450 curveto
10 390 286 332 385 313 curveto
stroke
newpath 384 311 moveto
394 311 lineto
385 316 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#17
gsave 10 dict begin
787 450 27 18 ellipse_path
stroke
gsave 10 dict begin
787 451 moveto (#17) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #17
newpath 519 800 moveto
556 785 624 756 624 756 curveto
652 738 673 710 694 684 curveto
728 638 764 592 786 540 curveto
792 524 791 498 790 477 curveto
stroke
newpath 788 478 moveto
789 468 lineto
793 478 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#20
gsave 10 dict begin
496 738 27 18 ellipse_path
stroke
gsave 10 dict begin
496 739 moveto (#20) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #20
newpath 496 792 moveto
496 784 496 775 496 766 curveto
stroke
newpath 494 766 moveto
496 756 lineto
499 766 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#22
gsave 10 dict begin
496 162 27 18 ellipse_path
stroke
gsave 10 dict begin
496 163 moveto (#22) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #22
newpath 522 806 moveto
618 790 943 732 944 666 curveto
944 666 944 666 944 306 curveto
943 162 669 223 533 180 curveto
533 180 530 179 527 177 curveto
stroke
newpath 526 179 moveto
518 173 lineto
528 175 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#33
gsave 10 dict begin
255 450 27 18 ellipse_path
stroke
gsave 10 dict begin
255 451 moveto (#33) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #33
newpath 469 810 moveto
367 807 262 792 166 756 curveto
88 726 133 580 168 504 curveto
176 486 201 472 223 463 curveto
stroke
newpath 221 461 moveto
231 459 lineto
223 466 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#34
gsave 10 dict begin
475 450 27 18 ellipse_path
stroke
gsave 10 dict begin
475 451 moveto (#34) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #34
newpath 509 794 moveto
530 765 571 706 572 666 curveto
572 666 572 666 572 594 curveto
571 554 525 500 496 471 curveto
stroke
newpath 495 474 moveto
490 465 lineto
499 470 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#14
gsave 10 dict begin
403 594 27 18 ellipse_path
stroke
gsave 10 dict begin
403 595 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #14
newpath 483 794 moveto
474 782 463 767 457 756 curveto
438 721 420 655 410 619 curveto
stroke
newpath 408 622 moveto
408 612 lineto
413 621 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#16
gsave 10 dict begin
707 522 27 18 ellipse_path
stroke
gsave 10 dict begin
707 523 moveto (#16) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #16
newpath 518 799 moveto
540 788 572 770 589 756 curveto
638 712 683 664 722 612 curveto
729 602 723 587 722 576 curveto
722 576 718 562 714 549 curveto
stroke
newpath 712 550 moveto
712 540 lineto
717 549 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#32
gsave 10 dict begin
255 522 27 18 ellipse_path
stroke
gsave 10 dict begin
255 523 moveto (#32) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #32
newpath 469 807 moveto
411 801 272 785 199 756 curveto
166 742 165 681 180 648 curveto
193 619 221 575 238 548 curveto
stroke
newpath 236 546 moveto
244 539 lineto
241 549 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#12
gsave 10 dict begin
889 594 27 18 ellipse_path
stroke
gsave 10 dict begin
889 595 moveto (#12) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tot_neg_#12
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
885 522 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
885 523 moveto (tot_neg) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#12 -> tot_neg_#12
newpath 888 576 moveto
887 568 887 559 887 550 curveto
stroke
newpath 885 550 moveto
886 540 lineto
889 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#12 -> #17
newpath 866 508 moveto
850 497 830 481 813 469 curveto
stroke
newpath 812 471 moveto
805 464 lineto
815 467 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#24
gsave 10 dict begin
787 306 27 18 ellipse_path
stroke
gsave 10 dict begin
787 307 moveto (#24) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tot_neg_#12 -> #24
newpath 880 504 moveto
870 471 847 398 830 360 curveto
827 354 816 340 806 328 curveto
stroke
newpath 805 331 moveto
801 322 lineto
809 328 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#13
gsave 10 dict begin
627 594 27 18 ellipse_path
stroke
gsave 10 dict begin
627 595 moveto (#13) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
631 522 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
631 523 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	#13 -> nb_neg_#13
newpath 628 576 moveto
629 568 629 559 629 550 curveto
stroke
newpath 627 550 moveto
630 540 lineto
631 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#18
gsave 10 dict begin
631 450 27 18 ellipse_path
stroke
gsave 10 dict begin
631 451 moveto (#18) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13 -> #18
newpath 631 504 moveto
631 496 631 487 631 478 curveto
stroke
newpath 629 478 moveto
631 468 lineto
634 478 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#13 -> #24
newpath 649 507 moveto
663 496 680 480 689 468 curveto
712 434 723 394 744 360 curveto
747 355 758 340 769 328 curveto
stroke
newpath 766 328 moveto
774 322 lineto
770 331 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#40
gsave 10 dict begin
660 306 27 18 ellipse_path
stroke
gsave 10 dict begin
660 307 moveto (#40) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13 -> #40
newpath 644 505 moveto
654 492 668 473 670 468 curveto
681 433 679 395 674 360 curveto
673 353 671 343 668 334 curveto
stroke
newpath 665 334 moveto
665 324 lineto
670 333 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#15
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
496 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
496 235 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#15 -> i_#15
newpath 436 291 moveto
447 281 461 267 473 255 curveto
stroke
newpath 471 254 moveto
480 249 lineto
474 257 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#15
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
420 234 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
420 235 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#15 -> tab_abs_#15
newpath 420 288 moveto
420 280 420 271 420 262 curveto
stroke
newpath 418 262 moveto
420 252 lineto
423 262 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#15 -> #22
newpath 496 216 moveto
496 208 496 199 496 190 curveto
stroke
newpath 494 190 moveto
496 180 lineto
499 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#15 -> #22
newpath 436 218 moveto
447 208 462 195 473 183 curveto
stroke
newpath 471 182 moveto
480 177 lineto
474 185 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#17
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
787 378 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
787 379 moveto (tot_neg) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#17 -> tot_neg_#17
newpath 781 432 moveto
780 424 780 415 780 406 curveto
stroke
newpath 778 406 moveto
781 396 lineto
782 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#17 -> #17
newpath 794 422 moveto
794 413 794 404 793 396 curveto
stroke
newpath 796 422 moveto
793 432 lineto
792 422 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#17 -> #24
newpath 787 360 moveto
787 352 787 343 787 334 curveto
stroke
newpath 785 334 moveto
787 324 lineto
790 334 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
631 378 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
631 379 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	#18 -> nb_neg_#18
newpath 625 432 moveto
624 424 624 415 624 406 curveto
stroke
newpath 622 406 moveto
625 396 lineto
626 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18 -> #18
newpath 638 422 moveto
638 413 638 404 637 396 curveto
stroke
newpath 640 422 moveto
637 432 lineto
636 422 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18 -> #24
newpath 655 367 moveto
683 354 729 333 759 319 curveto
stroke
newpath 755 318 moveto
765 316 lineto
757 323 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#18 -> #40
newpath 638 360 moveto
642 352 646 342 650 333 curveto
stroke
newpath 647 333 moveto
653 324 lineto
652 334 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
496 666 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
496 667 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#20 -> i_#20
newpath 490 720 moveto
489 712 489 703 489 694 curveto
stroke
newpath 487 694 moveto
490 684 lineto
491 694 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #15
newpath 503 648 moveto
513 618 533 558 534 522 curveto
534 522 534 522 534 450 curveto
533 419 533 384 514 360 curveto
502 344 474 329 451 319 curveto
stroke
newpath 451 322 moveto
443 315 lineto
453 317 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #17
newpath 523 666 moveto
593 664 666 653 722 612 curveto
755 587 774 515 782 476 curveto
stroke
newpath 779 477 moveto
784 468 lineto
784 478 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #20
newpath 503 710 moveto
503 701 503 692 502 684 curveto
stroke
newpath 505 710 moveto
502 720 lineto
501 710 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #33
newpath 489 648 moveto
475 613 440 535 404 504 curveto
379 481 324 465 288 457 curveto
stroke
newpath 290 460 moveto
281 455 lineto
291 455 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #34
newpath 494 648 moveto
490 610 482 522 478 477 curveto
stroke
newpath 476 478 moveto
477 468 lineto
481 478 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #14
newpath 478 652 moveto
464 641 444 625 428 613 curveto
stroke
newpath 428 616 moveto
421 608 lineto
431 612 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #16
newpath 523 663 moveto
567 656 657 641 699 612 curveto
713 601 713 572 711 549 curveto
stroke
newpath 709 550 moveto
710 540 lineto
714 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#20 -> #32
newpath 472 658 moveto
442 647 392 628 364 612 curveto
339 597 302 564 278 544 curveto
stroke
newpath 276 546 moveto
271 537 lineto
280 542 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#22
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
496 90 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
496 91 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#22 -> tab_abs_#22
newpath 496 144 moveto
496 136 496 127 496 118 curveto
stroke
newpath 494 118 moveto
496 108 lineto
499 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop-2
gsave 10 dict begin
0.000 0.000 0.753 nodecolor
newpath 561 36 moveto
507 36 lineto
507 0 lineto
561 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
534 19 moveto (loop-2) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_abs_#22 -> loop-2
newpath 505 73 moveto
510 65 515 54 520 45 curveto
stroke
newpath 518 44 moveto
524 36 lineto
522 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	aver_neg_#24
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
1008 234 36 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
1008 235 moveto (aver_neg) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	#24 -> aver_neg_#24
newpath 811 298 moveto
850 286 927 260 972 246 curveto
stroke
newpath 968 245 moveto
978 244 lineto
969 250 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#41
gsave 10 dict begin
1008 162 27 18 ellipse_path
stroke
gsave 10 dict begin
1008 163 moveto (#41) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	aver_neg_#24 -> #41
newpath 1008 216 moveto
1008 208 1008 199 1008 190 curveto
stroke
newpath 1006 190 moveto
1008 180 lineto
1011 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#33
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
310 378 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
310 379 moveto (retval) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	#33 -> retval_#33
newpath 267 434 moveto
274 424 284 412 292 402 curveto
stroke
newpath 290 401 moveto
298 394 lineto
294 404 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#33 -> #15
newpath 329 365 moveto
347 354 374 337 394 324 curveto
stroke
newpath 391 323 moveto
401 319 lineto
394 327 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#34
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
475 378 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
475 379 moveto (retval) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	#34 -> retval_#34
newpath 475 432 moveto
475 424 475 415 475 406 curveto
stroke
newpath 473 406 moveto
475 396 lineto
478 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	retval_#34 -> #15
newpath 463 362 moveto
456 352 446 340 438 330 curveto
stroke
newpath 436 332 moveto
432 322 lineto
440 329 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#43
gsave 10 dict begin
572 162 27 18 ellipse_path
stroke
gsave 10 dict begin
572 163 moveto (#43) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#43
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
572 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
572 91 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#43 -> i_#43
newpath 572 144 moveto
572 136 572 127 572 118 curveto
stroke
newpath 570 118 moveto
572 108 lineto
575 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#43 -> loop-2
newpath 563 73 moveto
558 65 553 54 548 45 curveto
stroke
newpath 546 46 moveto
544 36 lineto
550 44 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#8
gsave 10 dict begin
238 738 27 18 ellipse_path
stroke
gsave 10 dict begin
238 739 moveto (#8) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
238 666 46 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
238 667 moveto (tab_numbers) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	#8 -> tab_numbers_#8
newpath 238 720 moveto
238 712 238 703 238 694 curveto
stroke
newpath 236 694 moveto
238 684 lineto
241 694 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #15
newpath 207 652 moveto
190 643 176 629 168 612 curveto
154 578 159 538 168 504 curveto
184 446 221 391 271 360 curveto
300 342 353 325 388 315 curveto
stroke
newpath 385 313 moveto
395 313 lineto
386 318 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #17
newpath 246 648 moveto
263 608 305 513 326 504 curveto
431 455 555 481 670 468 curveto
693 465 728 460 755 455 curveto
stroke
newpath 751 453 moveto
761 454 lineto
752 458 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #33
newpath 216 650 moveto
203 639 188 625 183 612 curveto
172 577 169 536 183 504 curveto
190 489 208 476 225 466 curveto
stroke
newpath 223 464 moveto
233 461 lineto
226 468 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #34
newpath 230 648 moveto
212 609 176 517 216 504 curveto
277 483 386 464 441 455 curveto
stroke
newpath 438 453 moveto
448 454 lineto
438 458 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #14
newpath 269 652 moveto
298 639 341 621 371 608 curveto
stroke
newpath 370 606 moveto
380 604 lineto
372 610 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #16
newpath 284 664 moveto
371 658 562 644 666 612 curveto
686 606 696 573 702 549 curveto
stroke
newpath 699 549 moveto
704 540 lineto
704 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> #32
newpath 240 648 moveto
244 623 249 578 252 549 curveto
stroke
newpath 249 550 moveto
253 540 lineto
254 550 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#14 -> #15
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 404 576 moveto
407 526 415 389 419 331 curveto
stroke
newpath 417 334 moveto
419 324 lineto
422 334 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#14 -> #20
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 480 717 moveto
472 706 463 693 457 684 curveto
445 664 425 631 413 611 curveto
stroke
newpath 480 713 moveto
484 722 lineto
476 716 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#14 -> #16
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 429 589 moveto
483 579 605 556 674 540 curveto
676 539 678 539 681 538 curveto
stroke
newpath 677 537 moveto
687 534 lineto
680 542 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#14 -> #32
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 381 583 moveto
356 570 314 551 286 537 curveto
stroke
newpath 285 539 moveto
277 533 lineto
287 535 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#30
gsave 10 dict begin
365 522 27 18 ellipse_path
stroke
gsave 10 dict begin
365 523 moveto (#30) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	#14 -> #30
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 394 577 moveto
389 569 384 558 378 548 curveto
stroke
newpath 376 549 moveto
374 539 lineto
380 547 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#16 -> #17
gsave 10 dict begin
dotted
0.000 0.000 0.753 edgecolor
newpath 723 507 moveto
735 497 751 482 764 471 curveto
stroke
newpath 762 470 moveto
771 465 lineto
765 473 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#16 -> #18
gsave 10 dict begin
dotted
0.000 0.000 0.753 edgecolor
newpath 691 507 moveto
680 497 666 483 654 471 curveto
stroke
newpath 653 473 moveto
647 465 lineto
656 470 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#32 -> #33
gsave 10 dict begin
dotted
0.000 0.000 0.753 edgecolor
newpath 255 504 moveto
255 496 255 487 255 478 curveto
stroke
newpath 253 478 moveto
255 468 lineto
258 478 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#32 -> #34
gsave 10 dict begin
dotted
newpath 276 511 moveto
282 508 288 505 293 504 curveto
334 491 401 471 442 459 curveto
stroke
newpath 440 457 moveto
450 457 lineto
441 462 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 1037 1636 a Ff(Figure)23 b(4.)f(The)i(dependence)g(graph)g
(with)f(one)1037 1686 y(gr)o(oup)13 b(collapsed)1037
1865 y Fq(At)c(this)g(point,)g(one)h(can)h(either)e(continue)g(to)h
(collapse)g(groups,)987 1915 y(or)n(,)f(in)n(v)o(ersely)g
Fm(e)o(xpand)g Fq(already)h(collapsed)e(groups.)k(Ctrl-clicking)987
1965 y(on)c(a)i(displayed)d(group)h(asks)h(for)g(the)f(group)g(to)g(be)
h(replaced)g(by)g(all)987 2014 y(the)g(nodes)g(or)f(groups)h(belonging)
e(to)h(it,)h(making)g(the)g(graph)f(lar)o(ger)987 2064
y(b)o(ut)j(more)i(detailed.)19 b(Alternati)o(v)o(ely)m(,)12
b(one)g(can)h Fm(focus)f Fq(on)g(a)g(group)987 2114 y(by)d
(alt-clicking)f(on)h(it:)j(this)c(way)i(only)f(the)g(content)g(of)h
(this)e(group)987 2164 y(is)13 b(visible,)g(all)f(other)g(nodes)h(or)g
(groups)f(being)g(hidden.)21 b(F)o(or)13 b(e)o(x-)987
2214 y(ample,)e(Fig.)j(6)c(focuses)h(on)f(group)g Fh(loop-2)p
Fq(,)h(sho)o(wing)e(only)g(nodes)987 2263 y Fh(#44)p
Fq(,)g Fh(#45)f Fq(and)h Fh(#46)f Fq(and)g(their)g(dependences.)14
b(Ev)o(ery)9 b(dependence)987 2313 y(for)k(which)g(the)g(source)g(is)h
(outside)e Fh(loop-2)h Fq(is)g(dra)o(wn)h(as)g(coming)987
2363 y(from)d(the)g(virtual)f(group)g Fe(<)p Fh(BEFORE)p
Fe(>)p Fh(loop-2)g Fq(\226)i(here)f(the)g(initial)987
2413 y(v)o(alue)d(of)g Fh(i)h Fq(and)f(the)g(v)o(alue)h(of)f
Fh(tab)p 1464 2420 11 2 v 10 w(abs)f Fq(\226;)i(in)f(the)g(same)h
(manner)n(,)h(e)o(v-)987 2463 y(ery)e(dependence)h(for)f(which)g(the)g
(tar)o(get)g(would)f(be)h(outside)f Fh(loop-2)987 2512
y Fq(would)i(be)h(dra)o(wn)h(as)g(going)e(to)g Fe(<)p
Fh(AFTER)p Fe(>)p Fh(loop-2)p Fq(.)p 987 2624 394 2 v
1029 2651 a Fk(7)1047 2662 y Fj(Note)f(that)g(this)g(process)f(is)h
(handled)f(automatically)g(by)g(our)h(tool.)930 2787
y Fq(4)p eop
%%Page: 5 5
5 4 bop 43 754 a @beginspecial 220 @llx 306 @lly 392
@urx 487 @ury 1720 @rwi @setspecial
%%BeginDocument: Src/Dot/2-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
219 305 173 182 boxprim clip newpath
220 306 translate
0 0 1 beginpage
0.3846 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#11
gsave 10 dict begin
51 450 27 18 ellipse_path
stroke
gsave 10 dict begin
51 451 moveto (#11) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
51 378 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
51 379 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#11 -> i_#11
newpath 51 432 moveto
51 424 51 415 51 406 curveto
stroke
newpath 49 406 moveto
51 396 lineto
54 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#22
gsave 10 dict begin
69 162 27 18 ellipse_path
stroke
gsave 10 dict begin
69 163 moveto (#22) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> #22
newpath 44 360 moveto
32 327 9 253 26 216 curveto
31 207 39 195 47 185 curveto
stroke
newpath 45 183 moveto
54 178 lineto
49 187 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop-1
gsave 10 dict begin
0.000 0.000 0.753 nodecolor
newpath 192 324 moveto
138 324 lineto
138 288 lineto
192 288 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
165 307 moveto (loop-1) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#11 -> loop-1
newpath 71 365 moveto
88 355 113 339 133 326 curveto
stroke
newpath 128 326 moveto
138 323 lineto
131 330 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#12
gsave 10 dict begin
259 450 27 18 ellipse_path
stroke
gsave 10 dict begin
259 451 moveto (#12) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tot_neg_#12
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
259 378 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
259 379 moveto (tot_neg) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#12 -> tot_neg_#12
newpath 259 432 moveto
259 424 259 415 259 406 curveto
stroke
newpath 257 406 moveto
259 396 lineto
262 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#24
gsave 10 dict begin
299 162 27 18 ellipse_path
stroke
gsave 10 dict begin
299 163 moveto (#24) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	tot_neg_#12 -> #24
newpath 262 360 moveto
269 322 286 234 294 189 curveto
stroke
newpath 291 189 moveto
296 180 lineto
296 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_#12 -> loop-1
newpath 240 363 moveto
228 354 211 341 197 330 curveto
stroke
newpath 196 332 moveto
189 324 lineto
199 328 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#13
gsave 10 dict begin
339 450 27 18 ellipse_path
stroke
gsave 10 dict begin
339 451 moveto (#13) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
339 378 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
339 379 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	#13 -> nb_neg_#13
newpath 339 432 moveto
339 424 339 415 339 406 curveto
stroke
newpath 337 406 moveto
339 396 lineto
342 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#13 -> #24
newpath 336 360 moveto
329 322 312 234 304 189 curveto
stroke
newpath 302 190 moveto
302 180 lineto
307 189 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_#13 -> loop-1
newpath 316 366 moveto
311 364 306 362 302 360 curveto
275 349 233 332 202 320 curveto
stroke
newpath 200 322 moveto
192 316 lineto
202 317 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#40
gsave 10 dict begin
406 162 27 18 ellipse_path
stroke
gsave 10 dict begin
406 163 moveto (#40) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	nb_neg_#13 -> #40
newpath 351 361 moveto
369 335 403 284 420 252 curveto
428 236 422 209 416 188 curveto
stroke
newpath 414 190 moveto
413 180 lineto
419 188 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_#22
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
69 90 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
69 91 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	#22 -> tab_abs_#22
newpath 69 144 moveto
69 136 69 127 69 118 curveto
stroke
newpath 67 118 moveto
69 108 lineto
72 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop-2
gsave 10 dict begin
0.000 0.000 0.753 nodecolor
newpath 134 36 moveto
80 36 lineto
80 0 lineto
134 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
107 19 moveto (loop-2) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_abs_#22 -> loop-2
newpath 78 73 moveto
83 65 88 54 93 45 curveto
stroke
newpath 91 44 moveto
97 36 lineto
95 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	aver_neg_#24
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
299 90 36 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
299 91 moveto (aver_neg) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	#24 -> aver_neg_#24
newpath 299 144 moveto
299 136 299 127 299 118 curveto
stroke
newpath 297 118 moveto
299 108 lineto
302 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#41
gsave 10 dict begin
299 18 27 18 ellipse_path
stroke
gsave 10 dict begin
299 19 moveto (#41) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	aver_neg_#24 -> #41
newpath 299 72 moveto
299 64 299 55 299 46 curveto
stroke
newpath 297 46 moveto
299 36 lineto
302 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#43
gsave 10 dict begin
145 162 27 18 ellipse_path
stroke
gsave 10 dict begin
145 163 moveto (#43) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#43
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
145 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
145 91 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#43 -> i_#43
newpath 145 144 moveto
145 136 145 127 145 118 curveto
stroke
newpath 143 118 moveto
145 108 lineto
148 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#43 -> loop-2
newpath 136 73 moveto
131 65 126 54 121 45 curveto
stroke
newpath 119 46 moveto
117 36 lineto
123 44 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#8
gsave 10 dict begin
164 450 27 18 ellipse_path
stroke
gsave 10 dict begin
164 451 moveto (#8) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
164 378 46 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
164 379 moveto (tab_numbers) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	#8 -> tab_numbers_#8
newpath 164 432 moveto
164 424 164 415 164 406 curveto
stroke
newpath 162 406 moveto
164 396 lineto
167 406 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_numbers_#8 -> loop-1
newpath 164 360 moveto
165 352 165 343 165 334 curveto
stroke
newpath 163 334 moveto
165 324 lineto
168 334 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_loop-1
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
145 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
145 235 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> i_loop-1
newpath 160 288 moveto
158 280 155 270 153 261 curveto
stroke
newpath 151 262 moveto
150 252 lineto
156 261 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_loop-1
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
377 234 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
377 235 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> nb_neg_loop-1
newpath 192 297 moveto
230 284 299 260 341 246 curveto
stroke
newpath 340 244 moveto
350 243 lineto
341 249 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_loop-1
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
69 234 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
69 235 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> tab_abs_loop-1
newpath 141 288 moveto
127 278 109 265 95 254 curveto
stroke
newpath 94 256 moveto
88 248 lineto
97 253 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_loop-1
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
221 234 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
221 235 moveto (tot_neg) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> tot_neg_loop-1
newpath 179 288 moveto
186 279 195 268 202 258 curveto
stroke
newpath 200 257 moveto
208 251 lineto
203 260 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_loop-1 -> #22
newpath 129 219 moveto
118 209 104 195 92 183 curveto
stroke
newpath 91 185 moveto
85 177 lineto
94 182 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_loop-1 -> #24
newpath 360 219 moveto
349 209 334 195 322 183 curveto
stroke
newpath 321 185 moveto
315 177 lineto
324 182 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_loop-1 -> #40
newpath 384 216 moveto
388 208 392 198 396 189 curveto
stroke
newpath 393 189 moveto
399 180 lineto
398 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_loop-1 -> #22
newpath 69 216 moveto
69 208 69 199 69 190 curveto
stroke
newpath 67 190 moveto
69 180 lineto
72 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tot_neg_loop-1 -> #24
newpath 238 219 moveto
249 209 264 195 276 183 curveto
stroke
newpath 274 182 moveto
283 177 lineto
277 185 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 32 845 a Ff(Figure)13 b(5.)e(Almost)g(all)g(gr)o(oups)i
(collapsed)166 1662 y @beginspecial 250 @llx 306 @lly
363 @urx 486 @ury 1130 @rwi @setspecial
%%BeginDocument: Src/Dot/focus-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
249 305 114 181 boxprim clip newpath
250 306 translate
0 0 1 beginpage
0.4545 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#46
gsave 10 dict begin
84 234 27 18 ellipse_path
stroke
gsave 10 dict begin
84 235 moveto (#46) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
65 162 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
65 163 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	#46 -> i_#46
newpath 74 217 moveto
71 209 68 199 66 189 curveto
stroke
newpath 64 190 moveto
64 180 lineto
69 189 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46 -> #46
newpath 84 210 moveto
82 200 79 188 75 179 curveto
stroke
newpath 86 206 moveto
85 216 lineto
81 207 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44
gsave 10 dict begin
120 90 27 18 ellipse_path
stroke
gsave 10 dict begin
120 91 moveto (#44) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46 -> #44
newpath 77 146 moveto
84 136 94 124 102 114 curveto
stroke
newpath 100 113 moveto
108 106 lineto
104 116 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#45
gsave 10 dict begin
92 18 27 18 ellipse_path
stroke
gsave 10 dict begin
92 19 moveto (#45) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46 -> #45
newpath 68 144 moveto
73 119 82 74 87 45 curveto
stroke
newpath 84 45 moveto
89 36 lineto
89 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	<BEFORE>loop-2
gsave 10 dict begin
0.043 0.686 1.000 nodecolor
161 378 63 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
161 379 moveto (<BEFORE>loop-2) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_<BEFORE>loop-2
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
117 306 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
117 307 moveto (i) 3 14.00 -0.50 alignedtext
end grestore
end grestore

%	<BEFORE>loop-2 -> i_<BEFORE>loop-2
newpath 150 360 moveto
145 352 138 341 132 331 curveto
stroke
newpath 130 333 moveto
127 323 lineto
134 330 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
217 162 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
217 163 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	<BEFORE>loop-2 -> tab_abs_<BEFORE>loop-2
newpath 166 360 moveto
175 322 199 233 210 189 curveto
stroke
newpath 207 189 moveto
212 180 lineto
212 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #46
newpath 109 289 moveto
105 280 100 270 96 260 curveto
stroke
newpath 94 261 moveto
92 251 lineto
98 259 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #44
newpath 119 288 moveto
120 276 122 262 123 252 curveto
124 216 122 155 121 119 curveto
stroke
newpath 119 118 moveto
121 108 lineto
124 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #45
newpath 97 294 moveto
79 283 55 266 45 252 curveto
30 231 30 204 26 180 curveto
19 139 55 75 77 42 curveto
stroke
newpath 74 42 moveto
81 35 lineto
78 45 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2 -> #44
newpath 198 148 moveto
183 137 162 121 145 109 curveto
stroke
newpath 145 112 moveto
138 104 lineto
148 108 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2 -> #45
newpath 207 145 moveto
195 124 174 89 159 72 curveto
150 61 133 48 119 37 curveto
stroke
newpath 118 39 moveto
111 31 lineto
121 35 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44 -> #46
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 94 211 moveto
98 200 102 188 104 180 curveto
106 170 113 131 117 108 curveto
stroke
newpath 98 209 moveto
91 217 lineto
93 207 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#44 -> #45
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 113 73 moveto
110 64 106 54 102 44 curveto
stroke
newpath 100 45 moveto
99 35 lineto
105 44 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial -8 1754 a(Figure)f(6.)g(Focus)g(on)h(the)e(content)i(of)f
(a)f(gr)o(oup)-91 1895 y Fi(2.3.)h(Conceptual)g(hierar)o(chies)-41
2011 y Fq(By)g(allo)o(wing)e(to)i(bro)o(wse)h(dependence)g(graphs)g
(according)f(to)-91 2061 y(an)c(automatically)g(b)o(uilt)e(hierarchy)i
(of)g(groups,)g(our)g(tool)f(pro)o(vides)-91 2111 y(an)14
b(ef)o(\002cient)g(way)f(to)g(analyze)i(programs)e(at)h(dif)o(ferent)f
(le)o(v)o(els)h(of)-91 2160 y(abstraction.)h(Ho)o(we)o(v)o(er)n(,)e
(the)e(corresponding)f(groups)h(are)h(not)e(al-)-91 2210
y(ways)k(satisfactory:)19 b(we)c(would)e(like)g(for)g(e)o(xample)j(to)d
(ha)o(v)o(e)i(the)-91 2260 y(initialization)8 b(of)j(loop)f(v)o
(ariables)h(grouped)f(with)g(the)h(loop)f(itself,)-91
2310 y(or)i(computations)f(split)g(in)g(se)o(v)o(eral)j(instructions)c
(represented)j(as)-91 2360 y(a)e(single)e(group.)k(These)e(are)h
(concepts)e(that)g(don')o(t)f(e)o(xactly)i(corre-)-91
2409 y(spond)e(to)h(a)h(single)e(syntactic)h(structure.)-41
2463 y(Our)k(GUI)g(pro)o(vides)g(a)g(way)h(to)e(manually)h(b)o(uild)f
(groups)h(e)o(x-)-91 2513 y(actly)f(for)g(this)g(purpose.)22
b(At)13 b(an)o(y)h(moment,)h(one)e(can)i(group)d(to-)-91
2563 y(gether)g(selected)g(nodes)g(and)g(this)f(way)h(re\002ne)g(the)g
(e)o(xisting)f(hier)o(-)-91 2613 y(archy)m(.)23 b(F)o(or)13
b(e)o(xample,)j(in)d(Fig.)22 b(5,)14 b(we)g(can)g(logically)e(group)g
(to-)-91 2663 y(gether)e(node)h Fh(#43)f Fq(with)g(group)g
Fh(loop-2)g Fq(as)i(it)e(is)g(just)g(an)h(initializa-)987
42 y(tion)d(for)h(the)h(loop.)i(F)o(or)d(the)h(same)h(reason,)f(we)g
(group)f(nodes)h Fh(#11)p Fq(,)987 91 y Fh(#12)f Fq(and)g
Fh(#13)g Fq(with)f Fh(loop-1)p Fq(,)i(and)g(we)f(also)h(group)e(with)g
(these)i(ones)987 141 y(nodes)p Fh(#22)i Fq(and)g Fh(#24)g
Fq(as)h(the)o(y)f(terminate)h(the)f(computations)f(per)o(-)987
191 y(formed)i(during)f(the)h(loop.)22 b(Finally)m(,)14
b(we)g(group)e(together)g(nodes)987 241 y Fh(#40)f Fq(and)h
Fh(#41)f Fq(since)h(the)o(y)g(both)e(ha)o(v)o(e)j(the)e(same)i
(purpose:)i(print-)987 291 y(ing)f(information)g(about)g(the)h(ne)o
(gati)o(v)o(e)h(numbers)f(and)h(their)e(a)o(v-)987 340
y(erage.)26 b(The)14 b(resulting)f(re\002ned)h(hierarchy)g(is)g(sho)o
(wn)g(in)f(Fig.)25 b(8)987 390 y(\(where)10 b(the)g(ne)o(w)h(groups)e
(ha)o(v)o(e)i(been)g(dra)o(wn)f(in)f(white)h(instead)g(of)987
440 y(gre)o(y\).)17 b(The)12 b(resulting)e(dependence)j(graph)e(is)g
(highly)f(simpli\002ed)987 490 y(\(see)16 b(Fig.)26 b(7)15
b(to)f(be)h(compared)h(to)e(Fig.)26 b(5\))15 b(and)g(clearly)g(sho)o
(ws)987 540 y(the)10 b(structure)f(of)h(the)g(program)g(while)f(hiding)
g(all)g(the)h(implemen-)987 589 y(tation)h(details:)k(there)d(is)g(one)
g(\002rst)g(step)g(where)g(v)o(alues)g(are)h(com-)987
639 y(puted)c(and)g(then)g(two)f(dif)o(ferent)h(v)o(alues)g(are)h
(printed.)i(This)d(is)h(easy)987 689 y(to)15 b(catch)h(because)h(we)e
(ha)o(v)o(e)i(only)d(three)h(groups)g(visible,)h(e)o(v)o(en)987
739 y(when)f(each)i(one)e(corresponds)g(to)g(se)o(v)o(eral)h
(instructions)d(spread)987 789 y(through)8 b(the)j(source)f(code.)1037
855 y(Note)16 b(also)g(that)g(grouping)f(together)g(nodes)h(or)h
(groups)e(that)987 905 y(produce)10 b(v)o(alues)h(for)f(the)h(same)h(v)
o(ariable)e(\226)h(like)e(in)h(in)g(this)g(e)o(xam-)987
954 y(ple)f(node)f Fh(#12)g Fq(and)h(group)f Fh(loop-1)h
Fq(that)f(update)h(v)o(ariable)f Fh(tot)p 1868 961 11
2 v 11 w(neg)h Fq(\226)987 1004 y(ends)g(up)f(with)g(a)h(single)f
(group)g(updating)f(a)i(v)o(ariable;)g(this)e(last)i(ob-)987
1054 y(ject)f(of)g(the)g(dependence)h(graph)e(represents)i(the)f
(\002nal)g(v)o(alue)g(of)g(the)987 1104 y(v)o(ariable)13
b(after)g(a)g(gi)o(v)o(en)g(computation)e(that)h(doesn')o(t)h
(correspond)987 1154 y(to)g(a)h(single)e(instruction)f(in)i(the)g
(source)h(code,)h(b)o(ut)e(results)g(from)987 1204 y(the)8
b(same)i(kind)d(of)i(fusion)e(of)h(dif)o(ferent)f(statements)i(as)g
(performed)987 1253 y(in)h(the)g(Single)f(Static)h(Assignment)g([6)o(])
h(technique.)1208 2099 y @beginspecial 241 @llx 306 @lly
371 @urx 487 @ury 1300 @rwi @setspecial
%%BeginDocument: Src/Dot/3-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
240 305 131 182 boxprim clip newpath
241 306 translate
0 0 1 beginpage
0.5556 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#8
gsave 10 dict begin
121 306 27 18 ellipse_path
stroke
gsave 10 dict begin
121 307 moveto (#8) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
121 234 46 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
121 235 moveto (tab_numbers) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	#8 -> tab_numbers_#8
newpath 121 288 moveto
121 280 121 271 121 262 curveto
stroke
newpath 119 262 moveto
121 252 lineto
124 262 lineto
closepath
gsave 0 setgray stroke grestore fill

%	compute
gsave 10 dict begin
newpath 152 180 moveto
90 180 lineto
90 144 lineto
152 144 lineto
closepath
stroke
gsave 10 dict begin
121 163 moveto (compute) 48 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8 -> compute
newpath 121 216 moveto
121 208 121 199 121 190 curveto
stroke
newpath 119 190 moveto
121 180 lineto
124 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	aver_neg_compute
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
36 90 36 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
36 91 moveto (aver_neg) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	print-aver-neg
gsave 10 dict begin
newpath 117 36 moveto
23 36 lineto
23 0 lineto
117 0 lineto
closepath
stroke
gsave 10 dict begin
70 19 moveto (print-aver-neg) 79 14.00 -0.50 alignedtext
end grestore
end grestore

%	aver_neg_compute -> print-aver-neg
newpath 44 72 moveto
48 64 53 54 57 45 curveto
stroke
newpath 55 44 moveto
61 36 lineto
59 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	compute -> aver_neg_compute
newpath 100 144 moveto
88 134 73 122 61 112 curveto
stroke
newpath 60 114 moveto
54 106 lineto
63 111 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_compute
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
121 90 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
121 91 moveto (nb_neg) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> nb_neg_compute
newpath 121 144 moveto
121 136 121 127 121 118 curveto
stroke
newpath 119 118 moveto
121 108 lineto
124 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_compute
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
201 90 31 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
201 91 moveto (tab_abs) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> tab_abs_compute
newpath 141 144 moveto
152 134 166 122 177 111 curveto
stroke
newpath 175 110 moveto
184 105 lineto
178 113 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_compute -> print-aver-neg
newpath 109 73 moveto
103 64 95 53 89 44 curveto
stroke
newpath 87 46 moveto
83 36 lineto
91 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	print-abs
gsave 10 dict begin
newpath 233 36 moveto
169 36 lineto
169 0 lineto
233 0 lineto
closepath
stroke
gsave 10 dict begin
201 19 moveto (print-abs) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_abs_compute -> print-abs
newpath 201 72 moveto
201 64 201 55 201 46 curveto
stroke
newpath 199 46 moveto
201 36 lineto
204 46 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 1037 2190 a Ff(Figure)h(7.)g(Dependence)h(graph)h(with)d
(conceptual)1037 2240 y(computations)1037 2413 y Fq(In)i(conclusion,)i
(with)d(the)i(basic)h(e)o(xisting)d(hierarchy)i(and)g(its)987
2463 y(possible)e(re\002nement,)j(we)f(ha)o(v)o(e)g(the)f(ability)e(to)
i(represent)g(as)h(an)987 2513 y(object)e(of)g(a)h(dependence)h(graph)e
(an)o(y)h(unit)e(of)h(computation)f(and)987 2563 y(an)o(y)h(v)o(alue)g
(of)f(a)i(program.)k(This)12 b(way)m(,)g(we)h(can)f(easily)g(comment)
987 2613 y(them,)g(as)f(we)h(do)e(for)g(other)h(items,)g(with)f(the)h
(annotation)e(mecha-)987 2662 y(nism)h(presented)g(in)g(the)g(ne)o(xt)g
(section.)930 2787 y(5)p eop
%%Page: 6 6
6 5 bop -91 583 a @beginspecial 36 @llx 36 @lly 288 @urx
176 @ury 2520 @rwi @setspecial
%%BeginDocument: Src/Dot/updhier-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 253 141 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0.2979 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	print-abs
gsave 10 dict begin
newpath 131 396 moveto
67 396 lineto
67 360 lineto
131 360 lineto
closepath
stroke
gsave 10 dict begin
99 379 moveto (print-abs) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	#43
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
27 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
27 307 moveto (#43) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	print-abs -> #43
newpath 81 360 moveto
71 350 59 338 49 328 curveto
stroke
newpath 47 330 moveto
42 321 lineto
51 326 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop-2
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 126 324 moveto
72 324 lineto
72 288 lineto
126 288 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 307 moveto (loop-2) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	print-abs -> loop-2
newpath 99 360 moveto
99 352 99 343 99 334 curveto
stroke
newpath 97 334 moveto
99 324 lineto
102 334 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
27 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
27 235 moveto (#44) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-2 -> #44
newpath 81 288 moveto
71 278 59 266 49 256 curveto
stroke
newpath 47 258 moveto
42 249 lineto
51 254 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#46
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
99 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 235 moveto (#46) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-2 -> #46
newpath 99 288 moveto
99 280 99 271 99 262 curveto
stroke
newpath 97 262 moveto
99 252 lineto
102 262 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#45
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
171 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
171 235 moveto (#45) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-2 -> #45
newpath 117 288 moveto
127 278 139 266 149 256 curveto
stroke
newpath 147 254 moveto
156 249 lineto
151 258 lineto
closepath
gsave 0 setgray stroke grestore fill

%	print-aver-neg
gsave 10 dict begin
newpath 290 396 moveto
196 396 lineto
196 360 lineto
290 360 lineto
closepath
stroke
gsave 10 dict begin
243 379 moveto (print-aver-neg) 79 14.00 -0.50 alignedtext
end grestore
end grestore

%	#41
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
171 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
171 307 moveto (#41) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	print-aver-neg -> #41
newpath 225 360 moveto
215 350 203 338 193 328 curveto
stroke
newpath 191 330 moveto
186 321 lineto
195 326 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#40
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
243 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
243 307 moveto (#40) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	print-aver-neg -> #40
newpath 243 360 moveto
243 352 243 343 243 334 curveto
stroke
newpath 241 334 moveto
243 324 lineto
246 334 lineto
closepath
gsave 0 setgray stroke grestore fill

%	compute
gsave 10 dict begin
newpath 454 396 moveto
392 396 lineto
392 360 lineto
454 360 lineto
closepath
stroke
gsave 10 dict begin
423 379 moveto (compute) 48 14.00 -0.50 alignedtext
end grestore
end grestore

%	#24
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
315 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
315 307 moveto (#24) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> #24
newpath 396 360 moveto
380 349 358 335 341 324 curveto
stroke
newpath 341 327 moveto
334 319 lineto
344 323 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#11
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
387 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
387 307 moveto (#11) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> #11
newpath 414 360 moveto
409 352 404 341 399 332 curveto
stroke
newpath 397 333 moveto
395 323 lineto
401 331 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#12
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
459 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
459 307 moveto (#12) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> #12
newpath 432 360 moveto
437 352 442 341 447 332 curveto
stroke
newpath 445 331 moveto
451 323 lineto
449 333 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#13
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
531 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
531 307 moveto (#13) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> #13
newpath 450 360 moveto
466 349 488 335 505 324 curveto
stroke
newpath 502 323 moveto
512 319 lineto
505 327 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#22
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
603 306 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
603 307 moveto (#22) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> #22
newpath 454 363 moveto
458 361 460 360 460 360 curveto
496 346 533 337 570 324 curveto
572 323 574 322 576 321 curveto
stroke
newpath 572 320 moveto
582 318 lineto
574 325 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 702 324 moveto
648 324 lineto
648 288 lineto
702 288 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
675 307 moveto (loop-1) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> loop-1
newpath 454 362 moveto
456 361 458 360 460 360 curveto
519 345 580 339 640 325 curveto
stroke
newpath 638 323 moveto
648 322 lineto
640 328 lineto
closepath
gsave 0 setgray stroke grestore fill

%	absolute_val
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 529 252 moveto
445 252 lineto
445 216 lineto
529 216 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
487 235 moveto (absolute_val) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> absolute_val
newpath 648 291 moveto
646 289 644 289 642 288 curveto
614 277 570 262 536 250 curveto
stroke
newpath 538 253 moveto
529 248 lineto
539 248 lineto
closepath
gsave 0 setgray stroke grestore fill

%	alt-3
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 630 252 moveto
576 252 lineto
576 216 lineto
630 216 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
603 235 moveto (alt-2) 25 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> alt-3
newpath 657 288 moveto
648 279 637 268 628 259 curveto
stroke
newpath 626 261 moveto
621 252 lineto
630 257 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#14
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
675 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
675 235 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> #14
newpath 675 288 moveto
675 280 675 271 675 262 curveto
stroke
newpath 673 262 moveto
675 252 lineto
678 262 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#15
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
747 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
747 235 moveto (#14) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> #15
newpath 693 288 moveto
703 278 715 266 725 256 curveto
stroke
newpath 723 254 moveto
732 249 lineto
727 258 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#20
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
819 234 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
819 235 moveto (#20) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop-1 -> #20
newpath 702 292 moveto
727 280 764 262 789 249 curveto
stroke
newpath 787 247 moveto
797 245 lineto
789 252 lineto
closepath
gsave 0 setgray stroke grestore fill

%	alt-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 442 180 moveto
388 180 lineto
388 144 lineto
442 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
415 163 moveto (alt-1) 25 14.00 -0.50 alignedtext
end grestore
end grestore

%	absolute_val -> alt-1
newpath 469 216 moveto
460 207 449 196 440 187 curveto
stroke
newpath 438 189 moveto
433 180 lineto
442 185 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#30
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
487 162 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
487 163 moveto (#30) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	absolute_val -> #30
newpath 487 216 moveto
487 208 487 199 487 190 curveto
stroke
newpath 485 190 moveto
487 180 lineto
490 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#32
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
343 90 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
343 91 moveto (#32) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-1 -> #32
newpath 397 144 moveto
387 134 375 122 365 112 curveto
stroke
newpath 363 114 moveto
358 105 lineto
367 110 lineto
closepath
gsave 0 setgray stroke grestore fill

%	then-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 442 108 moveto
388 108 lineto
388 72 lineto
442 72 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
415 91 moveto (then-1) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-1 -> then-1
newpath 415 144 moveto
415 136 415 127 415 118 curveto
stroke
newpath 413 118 moveto
415 108 lineto
418 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	else-1
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 514 108 moveto
460 108 lineto
460 72 lineto
514 72 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
487 91 moveto (else-1) 33 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-1 -> else-1
newpath 433 144 moveto
442 135 453 124 462 115 curveto
stroke
newpath 460 113 moveto
469 108 lineto
464 117 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#33
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
415 18 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
415 19 moveto (#33) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	then-1 -> #33
newpath 415 72 moveto
415 64 415 55 415 46 curveto
stroke
newpath 413 46 moveto
415 36 lineto
418 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#34
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
487 18 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
487 19 moveto (#34) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	else-1 -> #34
newpath 487 72 moveto
487 64 487 55 487 46 curveto
stroke
newpath 485 46 moveto
487 36 lineto
490 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#16
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
559 162 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
559 163 moveto (#16) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-3 -> #16
newpath 592 216 moveto
587 208 580 197 574 187 curveto
stroke
newpath 572 189 moveto
569 179 lineto
576 186 lineto
closepath
gsave 0 setgray stroke grestore fill

%	then-3
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 658 180 moveto
604 180 lineto
604 144 lineto
658 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
631 163 moveto (then-2) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-3 -> then-3
newpath 610 216 moveto
613 208 617 198 621 189 curveto
stroke
newpath 618 189 moveto
624 180 lineto
623 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	else-3
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 730 180 moveto
676 180 lineto
676 144 lineto
730 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
703 163 moveto (else-2) 33 14.00 -0.50 alignedtext
end grestore
end grestore

%	alt-3 -> else-3
newpath 628 216 moveto
641 207 657 195 670 186 curveto
stroke
newpath 669 184 moveto
678 180 lineto
672 188 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#17
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
595 90 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
595 91 moveto (#17) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	then-3 -> #17
newpath 622 144 moveto
617 136 612 125 607 116 curveto
stroke
newpath 605 117 moveto
603 107 lineto
609 115 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#18
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
667 90 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
667 91 moveto (#18) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	then-3 -> #18
newpath 640 144 moveto
645 136 650 125 655 116 curveto
stroke
newpath 653 115 moveto
659 107 lineto
657 117 lineto
closepath
gsave 0 setgray stroke grestore fill

%	main-level
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
newpath 360 468 moveto
306 468 lineto
306 432 lineto
360 432 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
333 451 moveto (main) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> print-abs
newpath 306 442 moveto
264 430 185 404 137 390 curveto
stroke
newpath 140 394 moveto
131 388 lineto
141 389 lineto
closepath
gsave 0 setgray stroke grestore fill

%	main-level -> print-aver-neg
newpath 310 432 moveto
299 423 285 412 273 402 curveto
stroke
newpath 272 404 moveto
265 396 lineto
275 400 lineto
closepath
gsave 0 setgray stroke grestore fill

%	main-level -> compute
newpath 356 432 moveto
367 423 381 412 393 402 curveto
stroke
newpath 392 400 moveto
401 396 lineto
395 404 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#8
gsave 10 dict begin
filled
0.000 0.000 0.753 nodecolor
499 378 27 18 ellipse_path
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
499 379 moveto (#8) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	main-level -> #8
newpath 360 439 moveto
390 427 438 408 466 396 curveto
467 396 468 395 469 395 curveto
stroke
newpath 468 393 moveto
478 390 lineto
470 397 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 81 675 a Ff(Figure)13 b(8.)e(The)h(modi\002ed)h(hierar)o
(ch)o(y)-91 797 y Fi(2.4.)f(T)m(yped)g(annotations)-41
896 y Fq(An)o(y)e(object)h(of)g(a)g(dependence)h(graph,)f(be)g(it)f(a)i
(node,)f(a)g(group)-91 946 y(or)f(a)h(v)o(ariable,)g(can)g(recei)o(v)o
(e)h(an)o(y)f(number)f(of)g Fm(typed)h(annotations)p
Fq(,)-91 996 y(namely)e(a)g(piece)h(of)e(te)o(xt,)i(the)e
Fm(annotation)e Fq(itself,)j(linked)e(to)h(a)h(ke)o(y-)-91
1045 y(word,)h(the)h Fm(type)p Fq(.)k(Such)c(typed)f(annotations)f(can)
j(be)f(used)g(to)f(doc-)-91 1095 y(ument)h(a)h(function)e(with)g(its)h
(number)g(of)g(ar)o(guments,)h(their)f(types)-91 1145
y(and)e(its)f(return)h(type,)g(or)g(a)h(v)o(ariable)f(with)f(its)g
(role,)i(its)e(type)h(and)g(its)-91 1195 y(range)h(of)g(v)o(alue,)h
(for)f(e)o(xample.)-41 1245 y(T)m(yped)i(annotations)f(are)i(attached)g
(to)f(the)g(objects)g(of)g(the)g(de-)-91 1294 y(pendence)19
b(graphs)f(and)h(can)g(then)f(be)h(modi\002ed)f(at)h(an)o(y)g(time.)-91
1344 y(The)o(y)13 b(can)h(be)f(visualized)f(on)h(demand)g(\226)g
(simply)f(by)g(pressing)h(a)-91 1394 y(mouse)e(b)o(utton)e(\226)h(or)g
(displayed)g(inside)g(the)g(graph)g(itself:)i(when)f(a)-91
1444 y(typed)f(annotation)f(is)h(displayed,)h(its)f(content)g(appears)h
(under)f(the)-91 1494 y(name)h(of)f(the)g(object)g(itself.)-41
1543 y(F)o(or)g(e)o(xample,)j(in)d(Fig.)j(9)e(we)g(put)e(annotations)h
(on)g(the)g(groups)-91 1593 y(and)j(v)o(ariables)g(of)g(Fig.)20
b(7.)i(The)13 b Fh(comm)g Fq(annotation)f(shortly)f(de-)-91
1643 y(scribes)i(the)g(ef)o(fect)h(of)f(each)h(step)g(of)e(the)h
(program)g(and)h(the)f(role)-91 1693 y(of)d(each)i(v)o(ariable)f(while)
f(the)h Fh(type)f Fq(annotation)g(gi)o(v)o(es)g(the)h(type)g(of)-91
1743 y(each)g(v)o(ariable.)-41 1793 y(As)16 b(this)g(e)o(xample)h(sho)o
(ws,)h(the)e(annotations)f(allo)o(w)h(to)f(ha)o(v)o(e)-91
1842 y(more)10 b(information)e(than)i(what)f(is)h(easily)g(e)o
(xtracted)h(from)e(the)h(de-)-91 1892 y(pendences.)25
b(Ho)o(we)o(v)o(er)n(,)16 b(displaying)11 b(all)j(the)g(typed)f
(annotations)-91 1942 y(is)f(rarely)g(suitable,)h(as)g(this)e(greatly)h
(o)o(v)o(erloads)g(the)g(graph.)19 b(That)-91 1992 y(is)10
b(why)g(we)h(control)e(the)i(display)e(of)h(typed)g(annotations)f(for)h
(each)-91 2042 y(object)g(in)f(the)h(follo)o(wing)e(way:)-50
2114 y Fd(\017)21 b Fq(a)10 b(typed)f(annotation)f(can)j(be)f(either)f
(always,)h(or)f(on)h(the)f(con-)-8 2164 y(trary)14 b(ne)o(v)o(er)n(,)j
(displayed)d(\(for)g(e)o(xample,)j(the)d Fh(comm)h Fq(anno-)-8
2214 y(tation)h(of)h(e)o(v)o(ery)g(object)g(that)g(has)g(this)g
(annotation)e(is)i(al-)-8 2263 y(ways/ne)o(v)o(er)10
b(displayed\))-50 2341 y Fd(\017)21 b Fq(each)12 b(typed)f(annotation)e
(of)i(e)o(v)o(ery)h(object)e(inte)o(grates)h(a)h(\003ag)-8
2391 y(that)j(states)h(if)f(it)g(is)g(to)g(be)h(displayed)f(or)g(not;)i
(this)e(\003ag)g(is)-8 2441 y(used)10 b(whene)o(v)o(er)g(the)g(global)f
(status)g(of)h(a)g(typed)f(anotation)f(is)-8 2491 y(unkno)o(wn.)-41
2563 y(This)h(way)m(,)i(we)f(can)h(tune)e(vie)o(ws)h(that)f(sho)o(w)h
(the)g(e)o(xact)h(amount)-91 2613 y(of)i(information)e(we)i(choose)h
(to)e(document)h(gi)o(v)o(en)g(units)f(of)h(pro-)-91
2662 y(grams.)987 42 y Fn(3.)g(Documenting)e(Pr)o(ograms)1037
152 y Fq(In)d(this)g(section,)i(we)f(\002rst)g(re)o(vie)o(w)f(the)h
(dif)o(ferent)f(kinds)g(of)h(units)987 202 y(we)15 b(can)g(annotate)f
(using)g(our)f(tool,)i(we)g(then)f(present)g(a)h(typical)987
252 y(way)c(to)f(apply)g(it)g(to)g(document)g(programs)h(and)g(we)g
(compare)h(our)987 302 y(tool)d(with)g(other)h(redocumentation)f
(tools.)987 408 y Fi(3.1.)j(Units)1037 514 y Fq(Due)i(to)f(its)g
(capabilities)g(to)g(group)g(together)g(se)o(v)o(eral)h(related)987
564 y(nodes)8 b(or)g(groups,)h(and)f(in)g(this)g(way)g(to)g(present)g
(as)h(a)g(single)f(object)987 614 y(a)j(v)o(ariable)g(which)g(may)g(ha)
o(v)o(e)h(been)f(set)g(in)g(dif)o(ferent)f(statements,)987
664 y(our)f(tool)f(allo)o(ws)g(to)h(document)g(dif)o(ferent)g(units)f
(of)h(programs)g(that)987 714 y(are)g(not)e(easily)i(accessible)g(in)f
(the)g(source)g(code.)13 b(W)m(e)c(re)o(vie)o(w)f(them)987
764 y(in)i(the)g(\(open\))f(list)h(belo)o(w)m(.)987 858
y Fc(Structural)h(units)20 b Fq(\(functions,)27 b(loops)c(or)h
(conditional)e(state-)1070 908 y(ments\))f(Nodes)f(are)i(grouped)e(on)g
(the)g(basis)h(of)f(syntac-)1070 958 y(tic)14 b(structures,)i(that)e
(are)h(usually)f(easily)g(identi\002ed)g(in)g(the)1070
1008 y(source)d(\002le;)g(ho)o(we)o(v)o(er)n(,)h(since)f(such)g
(structures)g(may)g(spread)1070 1058 y(o)o(v)o(er)17
b(pages)g(and)g(pages)g(of)f(code,)i(representing)e(them)h(as)1070
1108 y(a)h(single)f(group)f(allo)o(ws)h(\002rst)g(to)g(sho)o(w)h(a)g
(global)e(outline)1070 1157 y(of)e(their)f(beha)o(vior)h(and)g
(secondly)g(to)f(clearly)h(identify)f(the)1070 1207 y(scope)e(of)f(e)o
(v)o(entual)g(comments.)987 1294 y Fc(Conceptual)g(units)21
b Fq(As)30 b(Section)f(2.3)h(sho)o(wed,)k(conceptual)1070
1344 y(groups)8 b(allo)o(w)h(to)g(put)f(together)g(nodes)i(or)e(groups)
h(that)f(work)1070 1393 y(to)o(wards)13 b(a)i(gi)o(v)o(en)f
(computation.)24 b(These)16 b(may)f(be)f(the)h(ini-)1070
1443 y(tializations)f(or)h(terminations)f(done)h(around)g(a)h(loop,)g
(or)f(a)1070 1493 y(sequence)c(of)e(statements)g(that)g(progressi)o(v)o
(ely)f(produce)i(a)f(\002-)1070 1543 y(nal)i(v)o(alue;)g(in)f(these)i
(cases,)h(a)f(single)e(group)g(represents)i(the)1070
1593 y(computation)d(e)o(v)o(en)i(if)f(it)g(may)h(be)g(hard)f(to)g
(identify)f(the)h(cor)o(-)1070 1642 y(responding)f(statements)h(in)g
(the)g(source)h(code.)1070 1711 y(Note)k(that)f(we)i(created)g(such)f
(groups)f(when)h(we)h(b)o(uilt)e(the)1070 1760 y(graph)c(of)g(Fig.)i
(7.)987 1847 y Fc(Thr)o(eads)f(of)f(computations)20 b
Fq(Often)i(computations)f(split)g(into)1070 1897 y(se)o(v)o(eral)15
b(statements)g(are)h(mingled)d(e)o(v)o(en)j(if)e(the)o(y)g(are)h(actu-)
1070 1947 y(ally)e(not)f(directly)h(related)g(\226)h(say)m(,)h(the)o(y)
e(use)h(shared)g(v)o(alues)1070 1997 y(b)o(ut)i(produce)h(dif)o(ferent)
f(v)o(alues)h(\226.)34 b(Inserting)16 b(comments)1070
2046 y(in)e(such)h(sequences)h(of)e(lines)g(of)g(code)h(is)g(not)e
(straightfor)o(-)1070 2096 y(ward,)19 b(because)g(comments)f(also)f
(are)h(mingled)f(and)g(thus)1070 2146 y(hard)12 b(to)f(follo)o(w)m(.)17
b(Such)12 b(sequences)h(of)f(statements)g(are)g(rep-)1070
2196 y(resented)d(in)g(the)g(correponding)e(dependence)k(graph)d(as)i
(sep-)1070 2246 y(arate)k(chains)g(of)f(nodes,)i(that)e(can)h(thus)f
(be)g(separately)h(an-)1070 2295 y(notated)f(and)i(separately)f
(grouped.)24 b(This)14 b(sho)o(ws)g(that)g(our)1070 2345
y(approach)9 b(accounts)g(naturally)e(for)h(delocalized)h(plans)f([12)o
(].)1070 2413 y(F)o(or)16 b(e)o(xample,)i(in)e(Fig.)29
b(10)15 b(the)h(computation)e(of)i(a)g(point)1070 2463
y(coordinates,)25 b Fh(x3)c Fq(and)h Fh(y3)p Fq(,)j(is)c(done)h
(mingling)e(two)h(se-)1070 2513 y(quences)14 b(of)f(statements.)24
b(Commenting)12 b(separately)i(these)1070 2563 y(sequences)k(is)e(a)i
(bit)d(comple)o(x)i(if)f(one)h(wants)f(to)g(globally)1070
2613 y(comment)g(each)g(computation.)28 b(On)15 b(the)g(contrary)m(,)i
(in)e(the)1070 2663 y(dependence)c(graph,)g(one)f(can)i(collapse)e
(each)i(computation)930 2787 y(6)p eop
%%Page: 7 7
7 6 bop 113 737 a @beginspecial 108 @llx 308 @lly 505
@urx 485 @ury 3970 @rwi @setspecial
%%BeginDocument: Src/Dot/annot-sample.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
107 307 398 178 boxprim clip newpath
108 308 translate
0 0 1 beginpage
0.4314 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#8
gsave 10 dict begin
474 387 68 22 ellipse_path
stroke
gsave 10 dict begin
474 396 moveto (#8) 14 14.00 -0.50 alignedtext
474 380 moveto (comm:initialization) 109 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
474 294 154 34 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
474 311 moveto (tab_numbers) 72 14.00 -0.50 alignedtext
474 295 moveto (comm: set of both positive and negative numbers) 275 14.00 -0.50 alignedtext
474 279 moveto (type: array of int) 93 14.00 -0.50 alignedtext
end grestore
end grestore

%	#8 -> tab_numbers_#8
newpath 474 364 moveto
474 356 474 347 474 338 curveto
stroke
newpath 472 338 moveto
474 328 lineto
477 338 lineto
closepath
gsave 0 setgray stroke grestore fill

%	compute
gsave 10 dict begin
newpath 680 224 moveto
268 224 lineto
268 176 lineto
680 176 lineto
closepath
stroke
gsave 10 dict begin
474 217 moveto (compute) 48 14.00 -0.50 alignedtext
474 201 moveto (comm: build tab_abs with the absolute values of the nb in tab_numbers) 399 14.00 -0.50 alignedtext
474 185 moveto (+ compute the nb and average of negatives) 239 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_numbers_#8 -> compute
newpath 474 260 moveto
474 251 474 242 474 234 curveto
stroke
newpath 472 234 moveto
474 224 lineto
477 234 lineto
closepath
gsave 0 setgray stroke grestore fill

%	aver_neg_compute
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
158 106 158 34 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
158 123 moveto (aver_neg) 51 14.00 -0.50 alignedtext
158 107 moveto (comm: average of negative values of tab_numbers) 281 14.00 -0.50 alignedtext
158 91 moveto (type: float) 57 14.00 -0.50 alignedtext
end grestore
end grestore

%	print-aver-neg
gsave 10 dict begin
newpath 501 36 moveto
121 36 lineto
121 0 lineto
501 0 lineto
closepath
stroke
gsave 10 dict begin
311 27 moveto (print-aver-neg) 79 14.00 -0.50 alignedtext
311 11 moveto (comm: print the number of negatives as well as the average value) 365 14.00 -0.50 alignedtext
end grestore
end grestore

%	aver_neg_compute -> print-aver-neg
newpath 214 74 moveto
233 63 254 51 272 40 curveto
stroke
newpath 270 38 moveto
280 36 lineto
272 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	compute -> aver_neg_compute
newpath 393 176 moveto
351 164 301 148 257 136 curveto
stroke
newpath 260 140 moveto
251 134 lineto
261 135 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_compute
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
474 106 140 34 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
474 123 moveto (nb_neg) 41 14.00 -0.50 alignedtext
474 107 moveto (comm: number of negatives in tab_numbers) 246 14.00 -0.50 alignedtext
474 91 moveto (type: int) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> nb_neg_compute
newpath 474 176 moveto
474 168 474 159 474 150 curveto
stroke
newpath 472 150 moveto
474 140 lineto
477 150 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_compute
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
775 106 143 34 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
775 123 moveto (tab_abs) 42 14.00 -0.50 alignedtext
775 107 moveto (comm: set of absolute values of tab_numbers) 253 14.00 -0.50 alignedtext
775 91 moveto (type: array of int) 93 14.00 -0.50 alignedtext
end grestore
end grestore

%	compute -> tab_abs_compute
newpath 551 176 moveto
590 164 638 149 679 136 curveto
stroke
newpath 678 134 moveto
688 133 lineto
679 139 lineto
closepath
gsave 0 setgray stroke grestore fill

%	nb_neg_compute -> print-aver-neg
newpath 417 75 moveto
396 64 372 51 352 40 curveto
stroke
newpath 352 43 moveto
344 36 lineto
354 38 lineto
closepath
gsave 0 setgray stroke grestore fill

%	print-abs
gsave 10 dict begin
newpath 878 36 moveto
672 36 lineto
672 0 lineto
878 0 lineto
closepath
stroke
gsave 10 dict begin
775 27 moveto (print-abs) 49 14.00 -0.50 alignedtext
775 11 moveto (comm:print all the absolute values) 192 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab_abs_compute -> print-abs
newpath 775 72 moveto
775 63 775 54 775 45 curveto
stroke
newpath 773 46 moveto
775 36 lineto
778 46 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 429 829 a Ff(Figure)13 b(9.)e(Dependence)i(graph)g(with)e
(typed)i(annotations)282 975 y Fg(a)g(=)g(x1)h(+)e(y1;)282
1000 y(b)h(=)g(x2)h(+)e(y2;)282 1025 y(c)h(=)g(a)g(*)g(80;)282
1050 y(d)g(=)g(b)g(*)g(120;)282 1075 y(x3)h(=)f(c)g(+)f(5;)282
1100 y(y3)i(=)f(d)g(+)f(15;)282 1124 y(display)q(\(x3)q(,)k(y3\);)77
1257 y Ff(Figure)c(10.)g(Mingled)f(computations)101 1868
y @beginspecial 234 @llx 330 @lly 378 @urx 462 @ury 1440
@rwi @setspecial
%%BeginDocument: Src/Dot/thread-depg.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
233 329 145 133 boxprim clip newpath
234 330 translate
0 0 1 beginpage
0.5199 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	x1
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
27 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
27 235 moveto (x1) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
newpath 133 180 moveto
49 180 lineto
49 144 lineto
133 144 lineto
closepath
stroke
gsave 10 dict begin
91 171 moveto (computation) 70 14.00 -0.50 alignedtext
91 155 moveto (of 1st coord) 66 14.00 -0.50 alignedtext
end grestore
end grestore

%	x1 -> 1
newpath 41 218 moveto
49 209 60 198 69 187 curveto
stroke
newpath 67 186 moveto
75 180 lineto
70 189 lineto
closepath
gsave 0 setgray stroke grestore fill

%	x2
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
99 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 235 moveto (x2) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	x2 -> 1
newpath 97 216 moveto
96 208 95 198 94 190 curveto
stroke
newpath 92 190 moveto
93 180 lineto
96 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y1
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
178 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
178 235 moveto (y1) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 235 180 moveto
151 180 lineto
151 144 lineto
235 144 lineto
closepath
stroke
gsave 10 dict begin
193 171 moveto (computation) 70 14.00 -0.50 alignedtext
193 155 moveto (of 2nd coord) 71 14.00 -0.50 alignedtext
end grestore
end grestore

%	y1 -> 2
newpath 182 216 moveto
183 208 185 198 187 190 curveto
stroke
newpath 185 189 moveto
189 180 lineto
189 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y2
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
250 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
250 235 moveto (y2) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	y2 -> 2
newpath 237 218 moveto
231 209 222 198 213 188 curveto
stroke
newpath 211 190 moveto
207 180 lineto
215 187 lineto
closepath
gsave 0 setgray stroke grestore fill

%	x3
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
106 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
106 91 moveto (x3) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	7
gsave 10 dict begin
newpath 188 36 moveto
102 36 lineto
102 0 lineto
188 0 lineto
closepath
stroke
gsave 10 dict begin
145 19 moveto (display point) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	x3 -> 7
newpath 115 73 moveto
120 65 125 54 130 44 curveto
stroke
newpath 128 43 moveto
135 36 lineto
132 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y3
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
185 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
185 91 moveto (y3) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	y3 -> 7
newpath 176 73 moveto
171 65 166 54 160 44 curveto
stroke
newpath 158 46 moveto
155 36 lineto
162 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	1 -> x3
newpath 95 144 moveto
96 136 98 126 100 118 curveto
stroke
newpath 98 117 moveto
102 108 lineto
102 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	2 -> y3
newpath 191 144 moveto
190 136 189 126 188 118 curveto
stroke
newpath 186 118 moveto
187 108 lineto
190 118 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 100 1959 a(Figure)h(11.)g(Separate)f(comments)-8
2095 y Fq(in)i(a)i(conceptual)f(group)g(and)g(comment)h(them)f
(separately)m(,)-8 2145 y(as)d(Fig.)h(11)e(sho)o(ws.)-8
2213 y(Such)h(a)h(representation)e(is)i(also)f(useful)g(when,)g(on)g
(the)g(con-)-8 2263 y(trary)m(,)i(v)o(alues)g(are)g(shared)g(by)f(dif)o
(ferent)g(computations.)18 b(If,)-8 2313 y(for)10 b(e)o(xample,)j(we)f
(change)g(the)f(computation)f(of)g(v)o(ariable)h Fh(d)-8
2362 y Fq(in)e(Fig.)k(10)d(to)365 2450 y Fg(d)j(=)g(b)g(*)g(120)h(+)f
(a)-8 2563 y Fq(we)e(get)f(the)g(annotated)f(dependence)j(graph)e(of)f
(Fig.)k(12)d(that)-8 2613 y(clearly)h(sho)o(ws)f(that)g
Fh(x1)h Fq(and)g Fh(y1)f Fq(are)h(used)g(to)g(compute)f(both)-8
2663 y(coordinates.)1177 1483 y @beginspecial 234 @llx
329 @lly 379 @urx 464 @ury 1450 @rwi @setspecial
%%BeginDocument: Src/Dot/shared-depg.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
233 328 146 136 boxprim clip newpath
234 329 translate
0 0 1 beginpage
0.5333 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	x1
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
99 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 235 moveto (x1) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
newpath 126 180 moveto
42 180 lineto
42 144 lineto
126 144 lineto
closepath
stroke
gsave 10 dict begin
84 171 moveto (computation) 70 14.00 -0.50 alignedtext
84 155 moveto (of 1st coord) 66 14.00 -0.50 alignedtext
end grestore
end grestore

%	x1 -> 1
newpath 95 216 moveto
94 208 92 198 90 190 curveto
stroke
newpath 88 190 moveto
88 180 lineto
92 189 lineto
closepath
gsave 0 setgray stroke grestore fill

%	2
gsave 10 dict begin
newpath 228 180 moveto
144 180 lineto
144 144 lineto
228 144 lineto
closepath
stroke
gsave 10 dict begin
186 171 moveto (computation) 70 14.00 -0.50 alignedtext
186 155 moveto (of 2nd coord) 71 14.00 -0.50 alignedtext
end grestore
end grestore

%	x1 -> 2
newpath 116 220 moveto
128 211 144 197 157 186 curveto
stroke
newpath 155 185 moveto
164 180 lineto
158 188 lineto
closepath
gsave 0 setgray stroke grestore fill

%	x2
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
27 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
27 235 moveto (x2) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	x2 -> 1
newpath 40 218 moveto
47 209 56 198 64 188 curveto
stroke
newpath 62 187 moveto
70 180 lineto
66 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y1
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
171 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
171 235 moveto (y1) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	y1 -> 1
newpath 154 220 moveto
142 211 126 197 113 186 curveto
stroke
newpath 112 188 moveto
106 180 lineto
115 185 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y1 -> 2
newpath 175 216 moveto
176 208 178 198 180 190 curveto
stroke
newpath 178 189 moveto
182 180 lineto
182 190 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y2
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
243 234 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
243 235 moveto (y2) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	y2 -> 2
newpath 230 218 moveto
224 209 215 198 206 188 curveto
stroke
newpath 204 190 moveto
200 180 lineto
208 187 lineto
closepath
gsave 0 setgray stroke grestore fill

%	x3
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
99 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 91 moveto (x3) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	7
gsave 10 dict begin
newpath 181 36 moveto
95 36 lineto
95 0 lineto
181 0 lineto
closepath
stroke
gsave 10 dict begin
138 19 moveto (display point) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	x3 -> 7
newpath 108 73 moveto
113 65 118 54 123 44 curveto
stroke
newpath 121 43 moveto
128 36 lineto
125 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	y3
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
178 90 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
178 91 moveto (y3) 14 14.00 -0.50 alignedtext
end grestore
end grestore

%	y3 -> 7
newpath 169 73 moveto
164 65 159 54 153 44 curveto
stroke
newpath 151 46 moveto
148 36 lineto
155 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	1 -> x3
newpath 88 144 moveto
89 136 91 126 93 118 curveto
stroke
newpath 91 117 moveto
95 108 lineto
95 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	2 -> y3
newpath 184 144 moveto
183 136 182 126 181 118 curveto
stroke
newpath 179 118 moveto
180 108 lineto
183 118 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial 1163 1575 a Ff(Figure)i(12.)g(Shared)g(computations)987
1729 y Fc(V)l(ariables)e(r)o(esulting)h(fr)o(om)f(gr)o(oups)21
b Fq(As)e(already)f(pointed)f(out)1070 1778 y(in)12 b(Section)g(2.3,)h
(when)g(dif)o(ferent)e(statements)i(producing)e(a)1070
1828 y(v)o(alue)i(for)f(the)h(same)h(v)o(ariable)e(are)i(grouped)e
(together)n(,)h(this)1070 1878 y(leads)18 b(to)f(a)h(single)e(group)h
(producing)f(a)i(single)e(v)o(ariable.)1070 1928 y(This)8
b(means)h(that)e(we)h(ha)o(v)o(e)h(in)f(the)f(dependence)i(graph)f(a)g
(sin-)1070 1978 y(gle)g(object)g(that)g(represents)h(the)f(\002nal)g(v)
o(alue)h(of)f(the)g(v)o(ariable,)1070 2028 y(after)13
b(a)h(unit)e(of)h(computation:)k(a)d(function)d(call,)k(a)f(loop,)f(a)
1070 2077 y(conditional)c(statement)i(or)g(a)h(more)f(comple)o(x)h
(combination)1070 2127 y(of)c(such.)13 b(In)8 b(all)g(cases,)j(the)e
(point)e(in)h(the)g(source)h(code)g(where)1070 2177 y(a)14
b(comment)f(on)g(this)f(\002nal)h(v)o(alue)g(should)f(be)i(inserted)e
(\226)h(at)1070 2227 y(the)j(end)g(of)g(the)h(loop,)g(just)e(after)h
(the)h(function)d(call,)19 b(etc.)1070 2277 y(\226)11
b(is)g(usually)f(where)i(the)f(v)o(ariable)g(is)g(neither)g(modi\002ed)
g(nor)1070 2326 y(used,)e(thus)e(in)h(a)g(point)f(where)h(nobody)f
(would)g(look)g(for)g(such)1070 2376 y(a)14 b(comment.)25
b(In)14 b(the)g(corresponding)e(dependence)j(graph,)1070
2426 y(comments)g(are)g(attached)f(to)g(the)g(v)o(ariable)g(resulting)f
(from)1070 2476 y(the)e(group)e(and)i(are)h(accessible)g(either)f(when)
f(one)h(analyzes)1070 2526 y(the)h(group)f(itself)h(or)g(the)g
(possible)f(dif)o(ferent)h(usages)h(of)f(the)1070 2576
y(v)o(ariable)e(thereafter)n(.)1070 2662 y(In)j(Fig.)22
b(13,)14 b(for)f(e)o(xample,)i(a)f(loop)e(computes)i(the)f(sum)h(of)930
2787 y(7)p eop
%%Page: 8 8
8 7 bop -8 42 a Fq(the)12 b(elements)i(of)e(an)h(array)m(.)22
b(This)12 b(sum)h(is)g(the)f(result)h(of)f(an)-8 91 y(initialization)f
(before)j(the)g(loop)f(follo)o(wed)g(by)g(an)i(iterati)o(v)o(e)-8
141 y(increment)9 b(during)f(this)h(loop.)i(Its)e(\002nal)h(v)o(alue,)f
(which)g(is)g(ac-)-8 191 y(tually)f(the)i(sum)g(of)f
Fm(all)g Fq(the)g(elements)i(of)e(the)h(array)g(is)f(acces-)-8
241 y(sible)k(only)g(after)h(the)f(loop)g(and)g(that')n(s)g(where)h(a)h
(comment)-8 291 y(on)9 b(this)g(fact)h(should)e(be)i(inserted.)j(The)d
(dra)o(wback)h(is)e(that)g(at)-8 340 y(this)f(point)g(there)i(is)f(no)g
(statement)g(containing)f(the)h(v)o(ariable,)-8 390 y(thus)i(no)h
(reason)h(to)f(attach)h(such)f(a)h(comment.)20 b(One)13
b(would)-8 440 y(more)k(probably)e(look)g(for)h(it)f(later)i(when)f
(the)g(v)o(ariable)g(is)-8 490 y(used,)9 b(b)o(ut)f(if)h(this)e(v)o
(ariable)i(is)f(used)h(se)o(v)o(eral)h(times,)f(the)g(com-)-8
540 y(ment)i(is)g(not)g(likely)e(to)i(be)h(duplicated.)j(In)c(the)g
(dependence)-8 589 y(graph)i(\(see)i(Fig.)24 b(14\),)14
b(on)g(the)f(contrary)m(,)i(the)f(comment)g(is)-8 639
y(attached)g(to)f(the)h(v)o(ariable)g(resulting)e(from)h(the)h(group)f
(that)-8 689 y(represents)c(the)g(whole)g(loop)f(\(initializations)e
(and)j(iteration\))-8 739 y(and)h(then)f(is)h(')o(transmitted')f(to)g
(e)o(v)o(ery)i(point)e(where)h(the)g(v)o(ari-)-8 789
y(able)e(is)g(used:)k(e)o(v)o(en)d(if)f(one)g(of)g(these)h(points)d(is)
i(se)o(v)o(eral)i(pages)-8 839 y(later)f(in)f(the)h(\002le)g(or)g(in)f
(another)h(\002le,)g(it)g(appears)g(in)g(the)g(graph)-8
888 y(close)i(to)e(the)h(place)h(where)g(the)f(v)o(ariable)g(is)g(set)h
(or)f(used.)71 1000 y Fg(x)j(=)g(0;)71 1025 y(i=0;)71
1050 y(while)h(\(i<N\))h({)170 1075 y(x)e(+=)h(tab[i];)170
1100 y(i++)170 1125 y(})71 1174 y(/*)f(comment)j(on)d(final)i(value)f
(of)g(x)f(should)i(come)f(here)g(*/)71 1224 y(...)71
1274 y(/*)f(comment)j(looked)f(for)f(here,)g(when)h(x)e(is)g(used)h(*/)
71 1299 y(func1\(x\);)71 1349 y(/*)f(or)g(here,)i(when)f(x)f(is)h
(again)g(used)h(*/)71 1374 y(func2\(x\);)-32 1507 y Ff(Figure)e(13.)e
(Commenting)h(the)g(')n(result')f(of)h(a)f(loop)209 2351
y @beginspecial 260 @llx 306 @lly 352 @urx 487 @ury 920
@rwi @setspecial
%%BeginDocument: Src/Dot/result-depg.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
259 305 93 182 boxprim clip newpath
260 306 translate
0 0 1 beginpage
0.5233 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	sw
gsave 10 dict begin
invis
87 326 27 18 ellipse_path
stroke
gsave 10 dict begin
87 327 moveto (sw) 15 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
87 249 68 22 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
87 258 moveto (tab) 17 14.00 -0.50 alignedtext
87 242 moveto (array of N numbers) 108 14.00 -0.50 alignedtext
end grestore
end grestore

%	sw -> tab
newpath 87 308 moveto
87 300 87 291 87 282 curveto
stroke
newpath 85 282 moveto
87 272 lineto
90 282 lineto
closepath
gsave 0 setgray stroke grestore fill

%	loop
gsave 10 dict begin
newpath 125 190 moveto
49 190 lineto
49 154 lineto
125 154 lineto
closepath
stroke
gsave 10 dict begin
87 173 moveto (totalization) 63 14.00 -0.50 alignedtext
end grestore
end grestore

%	tab -> loop
newpath 87 226 moveto
87 218 87 209 87 200 curveto
stroke
newpath 85 200 moveto
87 190 lineto
90 200 lineto
closepath
gsave 0 setgray stroke grestore fill

%	x
gsave 10 dict begin
0.333 1.000 1.000 nodecolor
87 95 87 22 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
87 104 moveto (x) 7 14.00 -0.50 alignedtext
87 88 moveto (sum of the elements of tab) 147 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop -> x
newpath 87 154 moveto
87 146 87 137 87 128 curveto
stroke
newpath 85 128 moveto
87 118 lineto
90 128 lineto
closepath
gsave 0 setgray stroke grestore fill

%	func1
gsave 10 dict begin
51 18 27 18 ellipse_path
stroke
gsave 10 dict begin
51 19 moveto (func1) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	x -> func1
newpath 76 72 moveto
72 63 67 53 63 44 curveto
stroke
newpath 61 45 moveto
59 35 lineto
65 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	func2
gsave 10 dict begin
123 18 27 18 ellipse_path
stroke
gsave 10 dict begin
123 19 moveto (func2) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	x -> func2
newpath 98 72 moveto
102 63 107 53 111 44 curveto
stroke
newpath 109 43 moveto
115 35 lineto
113 45 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
end
restore
%%EndDocument
 @endspecial -15 2442 a(Figure)i(14.)e(Annotating)i(the)f(')n(result')f
(of)g(a)h(loop)-41 2563 y Fq(Note)d(that)f(one)h(of)g(the)g(perspecti)o
(v)o(es)h(opened)f(by)g(this)f(research)-91 2613 y(is)17
b(to)g(b)o(uild)f(a)i(catalog)g(of)f(those)g(units)g(of)g(programs)h
(that)e(are)-91 2662 y(not)11 b(directly)g(represented)h(in)f(the)h
(source)h(code)f(and)g(to)f(v)o(erify)h(to)987 42 y(which)e(e)o(xtent)g
(the)o(y)g(are)h(accessible)h(in)e(dependence)h(graphs.)987
144 y Fi(3.2.)h(A)f(typical)h(application)1037 246 y
Fq(W)m(e)g(used)g(our)f(tool)f(to)i(document)f(se)o(v)o(eral)i
(programs,)f(in)f(par)o(-)987 296 y(ticular)c(in)g(the)h(conte)o(xt)g
(of)g(a)g(seminar)h([17)o(]:)i(our)d(goal)f(was)h(to)g(b)o(uild)987
346 y(documentation)j(vie)o(ws)h(that)f(would)g(help)g(students)g
(understand-)987 396 y(ing)k(what)g(programs)h(computed)g(and)g(ho)o(w)
f(the)o(y)h(worked.)28 b(W)m(e)987 445 y(found)13 b(that)g(typically)f
(three)i(classes)h(of)e(comments)i(were)f(help-)987 495
y(ful.)24 b(W)m(e)15 b(discuss)f(them)g(belo)o(w)g(using,)g(for)g(sake)
h(of)f(simplicity)m(,)987 545 y(the)c(program)g(of)g(Fig.)j(1)d(as)h(e)
o(xample.)987 633 y Fc(Comments)f(at)g(code)h(le)o(vel)20
b Fq(The)15 b(purpose)e(of)h(the)g(\002rst)g(class)h(of)1070
682 y(comments)h(is)f(to)g(bridge)g(the)g(gap)g(between)h(the)g
(program)1070 732 y(itself)11 b(and)g(its)g(representation)g(as)h
(dependence)h(graph.)j(Ac-)1070 782 y(tually)m(,)9 b(identifying)e(to)j
(which)f(computation)f(a)j(set)f(of)f(nodes)1070 832
y(correspond)14 b(is)f(v)o(ery)i(hard)f(because)h(there)f(is)g(no)g
(informa-)1070 882 y(tion)h(in)h(nodes)g(b)o(ut)g(line)g(numbers.)31
b(That')n(s)17 b(why)e(we)i(put)1070 931 y(annotations)9
b(on)g(each)i(node)f(with)f(the)h(corresponding)f(code)1070
981 y(and)15 b(a)h(short)f(sentence)h(describing)f(its)f(purpose;)k(we)
d(also)1070 1031 y(put)c(annotations)g(on)h(each)i(v)o(ariable)e(in)g
(order)g(to)g(comment)1070 1081 y(its)c(role,)i(its)e(type)h(and)g
(whene)o(v)o(er)h(possible)e(its)h(actual)g(v)o(alue.)1070
1147 y(Fig.)j(15)c(sho)o(ws)g(an)h(e)o(xample)g(of)f(such)h
(annotations)e(attached)1070 1196 y(to)j(the)g(nodes)g(and)g(v)o
(ariables)g(of)g(Fig.)j(6.)987 2308 y @beginspecial 182
@llx 270 @lly 431 @urx 523 @ury 2490 @rwi @setspecial
%%BeginDocument: Src/Dot/annot-focus.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
181 269 250 254 boxprim clip newpath
182 270 translate
0 0 1 beginpage
0.4172 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#46
gsave 10 dict begin
200 370 86 34 ellipse_path
stroke
gsave 10 dict begin
200 387 moveto (#46) 21 14.00 -0.50 alignedtext
200 371 moveto (code: i++) 53 14.00 -0.50 alignedtext
200 355 moveto (comm: increments i by 1) 139 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
162 254 124 45 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
162 279 moveto (i) 3 14.00 -0.50 alignedtext
162 263 moveto (comm: current position in tab_abs) 191 14.00 -0.50 alignedtext
162 247 moveto (type: integer) 70 14.00 -0.50 alignedtext
162 231 moveto (value: between 1 and length\(tab_abs\)) 208 14.00 -0.50 alignedtext
end grestore
end grestore

%	#46 -> i_#46
newpath 183 336 moveto
180 328 177 319 173 310 curveto
stroke
newpath 170 310 moveto
170 300 lineto
175 309 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46 -> #46
newpath 193 330 moveto
190 320 186 309 183 299 curveto
stroke
newpath 194 326 moveto
195 336 lineto
189 327 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44
gsave 10 dict begin
315 138 145 34 ellipse_path
stroke
gsave 10 dict begin
315 155 moveto (#44) 21 14.00 -0.50 alignedtext
315 139 moveto (code: while \(tab[i] != 0\)) 134 14.00 -0.50 alignedtext
315 123 moveto (comm: while current value of tab_abs is not 0) 256 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46 -> #44
newpath 216 213 moveto
231 201 248 188 264 177 curveto
stroke
newpath 263 175 moveto
272 171 lineto
266 179 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#45
gsave 10 dict begin
228 34 133 34 ellipse_path
stroke
gsave 10 dict begin
228 51 moveto (#45) 21 14.00 -0.50 alignedtext
228 35 moveto (code: printf \("%d\n", tab[i]\)) 155 14.00 -0.50 alignedtext
228 19 moveto (comm: prints the current value of tab_abs) 232 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46 -> #45
newpath 153 209 moveto
148 174 145 129 158 104 curveto
163 94 173 83 184 72 curveto
stroke
newpath 180 72 moveto
189 67 lineto
184 76 lineto
closepath
gsave 0 setgray stroke grestore fill

%	<BEFORE>loop-2
gsave 10 dict begin
0.043 0.686 1.000 nodecolor
353 586 63 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
353 587 moveto (<BEFORE>loop-2) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_<BEFORE>loop-2
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
268 486 74 45 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
268 511 moveto (i) 3 14.00 -0.50 alignedtext
268 495 moveto (comm: initial value) 108 14.00 -0.50 alignedtext
268 479 moveto (type: integer) 70 14.00 -0.50 alignedtext
268 463 moveto (value: 0) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	<BEFORE>loop-2 -> i_<BEFORE>loop-2
newpath 338 568 moveto
329 557 318 545 307 531 curveto
stroke
newpath 307 535 moveto
302 526 lineto
311 531 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
488 254 108 45 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
488 279 moveto (tab_abs) 42 14.00 -0.50 alignedtext
488 263 moveto (comm: array of absolute values) 175 14.00 -0.50 alignedtext
488 247 moveto (type: array of integer) 117 14.00 -0.50 alignedtext
488 231 moveto (value: array of positive integer) 171 14.00 -0.50 alignedtext
end grestore
end grestore

%	<BEFORE>loop-2 -> tab_abs_<BEFORE>loop-2
newpath 360 568 moveto
380 519 437 381 467 306 curveto
stroke
newpath 464 307 moveto
470 299 lineto
468 309 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #46
newpath 243 443 moveto
237 433 230 422 225 412 curveto
stroke
newpath 223 413 moveto
220 403 lineto
227 411 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #44
newpath 285 441 moveto
290 428 295 414 298 404 curveto
308 369 318 335 323 300 curveto
326 269 324 238 323 208 curveto
323 208 322 196 320 182 curveto
stroke
newpath 318 182 moveto
319 172 lineto
322 182 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #45
newpath 206 460 moveto
170 444 127 423 102 404 curveto
68 377 42 340 26 300 curveto
15 271 11 234 26 208 curveto
55 161 124 106 173 71 curveto
stroke
newpath 170 70 moveto
180 66 lineto
173 74 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2 -> #44
newpath 430 215 moveto
411 203 390 188 371 175 curveto
stroke
newpath 370 177 moveto
363 170 lineto
373 173 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2 -> #45
newpath 493 209 moveto
496 172 494 123 472 104 curveto
445 81 397 65 352 54 curveto
stroke
newpath 351 56 moveto
342 52 lineto
352 52 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44 -> #46
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 257 339 moveto
275 327 291 313 298 300 curveto
314 268 316 210 316 172 curveto
stroke
newpath 261 340 moveto
251 343 lineto
258 335 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#44 -> #45
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 287 105 moveto
279 95 270 85 262 75 curveto
stroke
newpath 260 77 moveto
256 67 lineto
264 74 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 1152 2399 a Ff(Figure)f(15.)f(Comments)h(of)g(the)g(code)
987 2513 y Fc(Comments)e(at)g(conceptual)g(le)o(vels)21
b Fq(The)d(purpose)g(of)f(the)g(sec-)1070 2563 y(ond)d(class)i(is)f(to)
f(comment)i(those)f(units)e(of)i(programs)g(we)1070 2613
y(mentioned)g(in)f(Section)h(3.1.)29 b(W)m(e)15 b(basically)g(inserted)
g(an-)1070 2662 y(notations)e(to)i(e)o(xplain)g(the)f(global)g(ef)o
(fect)i(of)f(structural)f(or)930 2787 y(8)p eop
%%Page: 9 9
9 8 bop -8 42 a Fq(conceptual)12 b(groups)g(and)h(detailed)f(the)h
(roles)f(and)h(possible)-8 91 y(v)o(alues)g(of)g(the)g(v)o(ariables)h
(resulting)d(from)j(these)f(computa-)-8 141 y(tions.)f(Fig.)g(9)f(sho)o
(ws)f(e)o(xamples)h(of)f(such)h(annotations.)-91 240
y Fc(Sampling)e(variables)19 b Fq(While)145 b(preparing)e(doc-)-8
290 y(umentation)13 b(vie)o(ws)h(for)g(our)g(class,)j(we)e(noticed)f
(that)f(doc-)-8 340 y(umenting)c(the)h(role)f(and)h(possible)f(v)o
(alues)h(of)g(v)o(ariables)g(was)-8 390 y(not)h(always)g(suf)o
(\002cient)g(to)h(e)o(xplain)f(gi)o(v)o(en)g(programs,)i(since)-8
439 y(actual)g(e)o(xamples)i(were)f(missing.)22 b(That')n(s)13
b(why)g(we)h(added)-8 489 y(annotations)9 b(that)i(sho)o(w)g(the)g
(real)g(v)o(alues)h(taken)e(by)h(the)g(dif-)-8 539 y(ferent)i(v)o
(ariables)g(for)f(a)h(gi)o(v)o(en)g(input)e(or)i(initial)e(v)o(alue.)21
b(F)o(or)-8 589 y(e)o(xample,)12 b(Fig.)g(16)e(sho)o(ws)g(the)g
(successi)o(v)o(e)i(v)o(alues)e(\(one)g(be-)-8 639 y(lo)o(w)h(the)g
(other\))g(taken)g(by)g(v)o(ariables)h Fh(i)f Fq(during)f(the)i
(iteration)-8 688 y(o)o(v)o(er)f(the)f(elements)h(of)f
Fh(tab)p 391 695 11 2 v 10 w(abs)p Fq(.)78 1509 y @beginspecial
229 @llx 306 @lly 384 @urx 487 @ury 1550 @rwi @setspecial
%%BeginDocument: Src/Dot/annot-var.ps
save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
228 305 156 182 boxprim clip newpath
229 306 translate
0 0 1 beginpage
0.3673 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	#46
gsave 10 dict begin
102 318 27 18 ellipse_path
stroke
gsave 10 dict begin
102 319 moveto (#46) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
77 204 39 59 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
77 245 moveto (i) 3 14.00 -0.50 alignedtext
77 229 moveto (ex: 1) 27 14.00 -0.50 alignedtext
77 213 moveto (  2) 14 14.00 -0.50 alignedtext
77 197 moveto (      3 ...) 42 14.00 -0.50 alignedtext
77 181 moveto (  9) 14 14.00 -0.50 alignedtext
77 165 moveto (  10) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	#46 -> i_#46
newpath 93 301 moveto
91 293 87 282 85 270 curveto
stroke
newpath 83 273 moveto
83 263 lineto
88 272 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_#46 -> #46
newpath 102 291 moveto
101 281 98 269 95 257 curveto
stroke
newpath 104 290 moveto
103 300 lineto
99 290 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44
gsave 10 dict begin
144 90 27 18 ellipse_path
stroke
gsave 10 dict begin
144 91 moveto (#44) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46 -> #44
newpath 103 160 moveto
112 145 122 128 130 114 curveto
stroke
newpath 127 114 moveto
134 107 lineto
131 117 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#45
gsave 10 dict begin
116 18 27 18 ellipse_path
stroke
gsave 10 dict begin
116 19 moveto (#45) 21 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_#46 -> #45
newpath 89 147 moveto
96 113 105 71 110 44 curveto
stroke
newpath 107 45 moveto
112 36 lineto
112 46 lineto
closepath
gsave 0 setgray stroke grestore fill

%	<BEFORE>loop-2
gsave 10 dict begin
0.043 0.686 1.000 nodecolor
204 472 63 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
204 473 moveto (<BEFORE>loop-2) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	i_<BEFORE>loop-2
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
142 395 27 22 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 404 moveto (i) 3 14.00 -0.50 alignedtext
142 388 moveto (ex: 0) 27 14.00 -0.50 alignedtext
end grestore
end grestore

%	<BEFORE>loop-2 -> i_<BEFORE>loop-2
newpath 190 454 moveto
182 444 172 432 163 421 curveto
stroke
newpath 162 423 moveto
157 414 lineto
165 420 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2
gsave 10 dict begin
0.333 0.753 0.804 nodecolor
315 204 105 22 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
315 213 moveto (tab_abs) 42 14.00 -0.50 alignedtext
315 197 moveto (ex: 12,-5,7,3,-89,-45,-6,9,10,-1,0) 183 14.00 -0.50 alignedtext
end grestore
end grestore

%	<BEFORE>loop-2 -> tab_abs_<BEFORE>loop-2
newpath 211 454 moveto
230 409 279 290 303 234 curveto
stroke
newpath 300 235 moveto
306 227 lineto
304 237 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #46
newpath 131 374 moveto
126 365 121 354 115 344 curveto
stroke
newpath 113 345 moveto
111 335 lineto
117 343 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #44
newpath 144 372 moveto
147 324 153 208 151 144 curveto
150 136 149 125 148 115 curveto
stroke
newpath 146 118 moveto
147 108 lineto
151 118 lineto
closepath
gsave 0 setgray stroke grestore fill

%	i_<BEFORE>loop-2 -> #45
newpath 120 381 moveto
102 369 76 350 63 336 curveto
46 315 32 290 26 264 curveto
19 224 13 181 26 144 curveto
38 111 75 66 97 39 curveto
stroke
newpath 93 39 moveto
102 34 lineto
97 43 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2 -> #44
newpath 283 183 moveto
249 162 199 127 169 107 curveto
stroke
newpath 170 111 moveto
163 103 lineto
173 106 lineto
closepath
gsave 0 setgray stroke grestore fill

%	tab_abs_<BEFORE>loop-2 -> #45
newpath 293 182 moveto
265 152 214 101 183 72 curveto
173 62 156 48 142 38 curveto
stroke
newpath 141 40 moveto
134 32 lineto
144 36 lineto
closepath
gsave 0 setgray stroke grestore fill

%	#44 -> #46
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 117 292 moveto
122 282 126 272 128 264 curveto
136 220 141 143 143 108 curveto
stroke
newpath 119 293 moveto
112 301 lineto
115 291 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	#44 -> #45
gsave 10 dict begin
0.000 0.000 0.753 edgecolor
newpath 137 73 moveto
134 64 130 54 126 44 curveto
stroke
newpath 124 45 moveto
123 35 lineto
129 44 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 21 1600 a Ff(Figure)j(16.)e(Examples)g(of)h(v)o(ariable)f
(v)o(alues)-8 1708 y Fq(Note)18 b(that)g(we)i(generated)f(these)g
(annotations)e(automati-)-8 1758 y(cally)12 b(after)g(manual)g
(modi\002cation)f(of)h(the)g(programs:)k(spe-)-8 1808
y(cial)d(directi)o(v)o(es)g(were)g(inserted)g(at)g(gi)o(v)o(en)g
(points)e(we)j(chose)-8 1858 y(carefully)9 b(in)f(order)h(to)g(get)g
(all)g(the)g(necessary)h(v)o(alues)g(for)e(the)-8 1908
y(vie)o(ws)j(we)h(wanted)f(to)f(b)o(uild.)15 b(This)c(way)m(,)h(we)g
(can)g(automat-)-8 1957 y(ically)h(generate)h(the)f(corresponding)f
(annotations)g(for)h(an)o(y)-8 2007 y(possible)i(input)f(or)h(initial)e
(v)o(alue)j(and)f(then)h(display)e(them)-8 2057 y(on)c(demand,)i
(altogether)e(or)g(on)h(the)f(contrary)g(one)h(after)g(an-)-8
2107 y(other)j(in)g(order)h(to)f(create)i(an)f(animation)f(of)g(the)h
(program)-8 2157 y(susceptible)d(to)g(assist)h(its)f(comprehension)g
([4].)20 b(Automat-)-8 2206 y(ing)8 b(the)g(instrumentation)f(of)i
(programs)f(is)h(of)f(course)i(one)f(of)-8 2256 y(our)h(main)g
(perspecti)o(v)o(es.)-41 2364 y(Redocumentation)21 b([5])h(is)h(the)f
(creation)h(of)f(semantically)-91 2413 y(equi)o(v)o(alent)12
b(representations)g(of)h(software,)g(is)g(a)h(central)f(acti)o(vity)-91
2463 y(in)i(Re)o(v)o(erse)i(Engineering)d(and)i(Software)f
(Maintenance.)30 b(Se)o(v-)-91 2513 y(eral)14 b(tools)e(ha)o(v)o(e)j
(thus)e(been)h(de)o(v)o(eloped)g(to)f(help)g(people)h(create,)-91
2563 y(store)k(and)g(bro)o(wse)g(documentation)f(vie)o(ws)h(of)g
(programs.)37 b(In)-91 2613 y([16)o(],)19 b(a)e(programming)e(en)n
(vironment)h(is)g(described)h(that)f(auto-)-91 2662 y(matically)e(inte)
o(grates)h(comments)g(found)f(in)g(those)h(source)g(\002les)987
42 y(that)c(are)h(loaded)f(and)h(that)e(proposes)h(a)h(specialized)g
(editor)f(to)g(at-)987 91 y(tach)f(dif)o(ferent)e(kinds)h(of)g
(annotations)f(to)h(an)o(y)h(point)e(of)h(the)g(corre-)987
141 y(sponding)d(programs;)j(as)g(a)g(result,)f(programs)g(are)h
(documented)f(at)987 191 y(dif)o(ferent)i(le)o(v)o(els)h(of)g
(abstraction)g(and)g(dif)o(ferent)f(vie)o(w)h(points)f(can)987
241 y(be)i(displayed.)18 b(In)12 b(RIGI)f([18)o(])h(graphs)g
(representing)f(artifacts)h(of)987 291 y(the)f(program)h(under)f
(consideration)f(can)i(be)g(manipulated)f(in)g(or)o(-)987
340 y(der)d(to)g(b)o(uild)f(representations)h(at)g(dif)o(ferent)g(le)o
(v)o(els)h(of)f(abstraction;)987 390 y(annotations)f(can)i(then)f(be)h
(attached)g(to)f(these)h(representations.)j(In)987 440
y([14)o(],)e(authors)f(propose)g(an)h(approach)g(to)f(b)o(uild)f(dif)o
(ferent)h(le)o(v)o(el)h(of)987 490 y(abstraction)f(documentation,)f
(combining)h(automatic)g(e)o(xtraction)987 540 y(from)15
b(source)g(code)h(and)f(hand-written)e(information;)i(this)f(pro-)987
589 y(cess)i(can)g(easily)f(be)g(tailored)f(to)h(speci\002c)h(re)o(v)o
(erse)g(engineering)987 639 y(needs.)1037 690 y(The)9
b(speci\002city)f(of)g(our)f(tool)g(is)h(to)g(pro)o(vide)f(a)i(way)f
(to)g(naturally)987 739 y(document)j(units)e(of)i(programs)f(that)h
(are)g(not)f(directly)g(accessible)987 789 y(in)j(the)g(source)h(code.)
24 b(This)13 b(enables)i(a)f(uniform)e(representation)987
839 y(\226)k(dependence)g(graphs)g(\226)g(to)f(be)h(the)g(basis)g(of)f
(dif)o(ferent)g(le)o(v)o(els)987 889 y(of)f(abstraction)g(vie)o(ws)g
(that)g(always)g(remain)h(closely)f(related)h(to)987
939 y(the)d(program)g(itself;)g(this)g(ensures)h(consistenc)o(y)f
(between)h(docu-)987 989 y(mentation)f(and)h(source)g(code.)21
b(Furthermore,)13 b(the)g(use)g(of)f(typed)987 1038 y(annotations)d
(allo)o(ws)i(for)f(a)h(wide)g(v)o(ariety)f(of)h(comments)g(that)g(can)
987 1088 y(be)j(tailored)f(to)g(speci\002c)h(tasks)g(or)g(to)f(dif)o
(ferent)g(users')h(le)o(v)o(els)g(of)987 1138 y(e)o(xpertise)c([7)o(],)
g(as)h(well)e(as)h(for)f(incremental)h(redocumentation)f(of)987
1188 y(programs)i([11)o(],)h(since)f(annotations)f(can)h(be)h(edited)e
(or)h(e)o(xtended)987 1238 y(at)f(an)o(y)h(moment.)987
1356 y Fn(4.)i(Conclusion)1037 1465 y Fq(In)g(this)f(paper)n(,)j(we)f
(ar)o(gued)f(that)g(source)h(code)f(is)g(not)g(always)987
1515 y(the)i(best)g(support)f(for)h(comments,)j(since)d(it)g(of)o(fers)
g(only)f(a)i(lo)o(w)987 1565 y(le)o(v)o(el)g(approach)g(to)f(programs)h
(and)f(since)i(man)o(y)f(units)f(are)h(not)987 1615 y(directly)7
b(accessible,)j(either)e(because)i(the)e(corresponding)f(code)i(is)987
1664 y(spread)g(o)o(v)o(er)g(se)o(v)o(eral)g(pages)h(or)e(because)i
(the)o(y)e(do)g(not)g(correspond)987 1714 y(to)i(one)g(single)f(point)g
(in)h(the)g(source)h(\002le.)1037 1765 y(W)m(e)e(then)f(sho)o(wed)g
(that)g(dependence)h(graphs)f(are)i(a)e(better)h(doc-)987
1815 y(umentation)f(support.)k(Our)d(tool)g(allo)o(ws)g(to)g
(automatically)f(group)987 1864 y(syntactically)h(related)i(nodes)f
(together)g(and)h(then)f(to)g(re\002ne)h(these)987 1914
y(preliminary)16 b(groupings)g(by)h(collapsing)f(conceptually)g
(related)987 1964 y(nodes)d(or)g(groups.)21 b(This)13
b(way)m(,)i(we)e(can)h(tune)f(graphs)g(that)g(sho)o(w)987
2014 y(units)8 b(of)h(computations)f(and)h(the)g(v)o(alues)g(the)o(y)h
(produce:)h(all)e(these)987 2064 y(units)j(are)j(represented)f(by)f
(objects)h(of)f(the)h(dependence)h(graphs)987 2113 y(that)10
b(can)h(be)f(documented)g(through)f(typed)h(annotations.)1037
2164 y(An)22 b(annotation)f(editor)n(,)26 b(added)d(to)f(a)h
(dependence)h(graph)987 2214 y(bro)o(wser)n(,)9 b(was)g(used)g(to)e
(document)i(se)o(v)o(eral)g(programs)f(in)g(the)h(con-)987
2263 y(te)o(xt)i(of)g(a)g(class.)17 b(F)o(or)11 b(this)g(purpose,)g(we)
h(worked)d(with)i(programs)987 2313 y(of)j(rather)g(small)h(size)g(and)
f(we)h(could)f(attach)h(all)f(the)g(necessary)987 2363
y(annotations)c(manually)m(.)18 b(W)m(ould)11 b(these)h(programs)g(ha)o
(v)o(e)g(been)h(of)987 2413 y(real-world)8 b(size,)j(it)e(would)f(ha)o
(v)o(e)j(been)f(too)f(much)h(an)g(ef)o(fort)f(to)g(be)987
2463 y(af)o(fordable.)1037 2513 y(This)15 b(leads)g(to)g(the)g
(question)f(of)h(the)g(scalability)f(of)h(our)f(ap-)987
2563 y(proach.)23 b(In)13 b([3],)h(we)g(sho)o(wed)g(that)f(the)g
(hierarchy)g(construction)987 2613 y(scales)18 b(well)f(to)f(programs)h
(of)f(lar)o(ger)h(size,)j(producing)15 b(groups)987 2662
y(with)d(a)h(satisfying)f(a)o(v)o(erage)i(number)f(of)g(nodes:)k(in)c
(most)f(cases,)930 2787 y(9)p eop
%%Page: 10 10
10 9 bop -91 42 a Fq(the)15 b(number)g(of)g(nodes)h(in)e(a)i(gi)o(v)o
(en)f(group)f(is)i(not)e(greater)i(than)-91 91 y(twenty;)j
(furthermore,)f(this)e(v)o(alue,)j(seems)f(clearly)f(to)f(depend)-91
141 y(much)e(more)g(on)f(the)h(syntactic)f(structure)g(of)h(the)f
(program)h(than)-91 191 y(on)8 b(its)g(size.)13 b(Scalability)7
b(for)h(documenting)f(means)j(primarily)d(au-)-91 241
y(tomating)i(documentation,)h(and)h(this)f(clearly)h(is)f(not)g(so)h
(much)g(an)-91 291 y(algorithmic)d(question)g(b)o(ut)h(a)g(conceptual)h
(one.)j(Ho)o(we)o(v)o(er)n(,)d(strate-)-91 340 y(gies)h(can)h(be)g(en)n
(visaged)g(to)e(automate)i(the)f(construction)f(of)h(\(part)-91
390 y(of\))f(a)g(dependence)i(graphs)e(documentation:)-50
478 y Fd(\017)21 b Fq(the)14 b(code)h(corresponding)e(to)h(nodes)g(can)
h(be)g(e)o(xtracted)g(by)-8 527 y(a)h(parser)n(,)i(modi\002ed)d(in)g
(order)g(to)g(not)g(only)g(b)o(uild)f(the)h(ab-)-8 577
y(stract)e(syntax)g(tree,)j(b)o(ut)c(also)i(to)f(memorize)i(each)f
(instruc-)-8 627 y(tion;)h(such)g(a)g(parser)g(could)f(also)h(e)o
(xtract)g(information)e(on)-8 677 y(types;)-50 758 y
Fd(\017)21 b Fq(the)13 b(comments)h(already)g(e)o(xisting)f(in)f(the)i
(source)g(\002les)g(can)-8 808 y(also)f(be)h(e)o(xtracted)g(and)g
(stored)f(as)h(annotations;)g(the)f(main)-8 858 y(problem)f(is)g(to)g
(identify)f(to)h(which)h(unit)e(of)h(computation)g(a)-8
908 y(comment)j(really)f(refers;)j(this)d(is)g(a)h(question)f(we)h(are)
g(cur)o(-)-8 958 y(rently)9 b(in)n(v)o(estigating;)-50
1039 y Fd(\017)21 b Fq(actual)c(v)o(alues)f(of)h(v)o(ariables)f(are)h
(accessible)h(using)e(a)h(de-)-8 1089 y(b)o(ugger)f(like)f
Fh(gdb)h Fq([13)o(];)j(here)e(the)f(question)f(is)h(to)g(decide)-8
1139 y(where)f(to)e(put)h(breakpoints)f(in)g(order)h(to)g(collect)g
(the)g(right)-8 1188 y(set)d(of)g(v)o(alues;)g(automating)f(this,)h
(clearly)m(,)h(requires)f(further)-8 1238 y(research.)-41
1326 y(Our)h(plan)g(is)g(to)g(de)o(v)o(elop)g(a)h(tool)e(able)i(to)f(e)
o(xtract)h(as)g(much)g(as)-91 1375 y(possible)8 b(from)g(source)h
(\002les)g(and)g(during)e(e)o(x)o(ecution)i(of)f(programs)-91
1425 y(in)14 b(order)g(to)g(b)o(uild)f(a)i(documentation)f(basis,)i
(susceptible)e(to)g(be)-91 1475 y(augmented)e(and)g(tuned,)h(using)e
(our)h(dependence)h(graph)f(manip-)-91 1525 y(ulation)d(tool,)i(during)
e(re)o(v)o(erse)k(engineering)d(acti)o(vities:)j(our)d(con-)-91
1575 y(viction)h(is)i(that)f(such)i(a)f(system)h(will)d(be)j(a)f(good)g
(basis)g(to)f(store,)-91 1625 y(bro)o(wse)e(and)g(share)h
(documentation)e(of)h(lar)o(ge)h(scale)g(software.)-91
1739 y Fn(Refer)o(ences)-73 1841 y Fb([1])22 b(G.)9 b(Antoniol,)g(R.)g
(Fiutem,)g(G.)g(Lutteri,)h(P)l(.)f(T)m(onella,)g(S.)f(Zanfei,)h(and)-8
1887 y(E.)h(Merlo.)15 b(Program)10 b(understanding)d(and)i(maintenance)
e(with)k(the)-8 1933 y(CANT)o(O)i(en)o(vironment.)24
b(In)13 b Fa(Pr)n(oceedings)d(of)j(the)g(Int.)g(Conf)o(.)h(on)-8
1978 y(Softwar)o(e)7 b(Maintenance)p Fb(.)g(IEEE)h(Computer)g(Society)f
(Press,)h(1997.)-73 2015 y([2])22 b(F)m(.)8 b(Balmas.)i(Displaying)d
(dependence)t(graphs:)j(a)e(hierarchical)f(ap-)-8 2060
y(proach.)k(In)e Fa(Pr)n(oceedings)d(of)j(the)f(W)m(orkshop)e(on)j
(Analysis,)e(Slicing)-8 2106 y(and)g(T)n(r)o(ansformation,)g(WCRE)h
(2001)p Fb(,)g(Stuttgart,)h(German)o(y)n(,)f(2001.)-73
2142 y([3])22 b(F)m(.)12 b(Balmas.)24 b(A)12 b(hierarchical)g(approach)
f(to)h(display)g(dependence)-8 2188 y(graphs:)17 b(tool)c(and)f(e)o(v)o
(aluation.)24 b(T)m(echnical)11 b(Report)i(TR-2002-3,)-8
2234 y(Uni)o(v)o(ersit)r(\264)-15 b(e)10 b(P)o(aris)g(8,)f
(Saint-Denis,)g(2002.)-73 2270 y([4])22 b(E.)13 b(Burd,)h(D.)f(Ov)o
(ery)n(,)h(and)e(A.)h(Wheetman.)25 b(Ev)o(aluating)12
b(the)g(use)-8 2316 y(of)i(animation)g(to)h(impro)o(v)o(e)g(the)f
(understandibility)g(of)g(sequence)-8 2361 y(diagrams.)28
b(In)15 b Fa(Pr)n(oc)e(of)h(the)g(10th)g(Int.)h(W)m(orkshop)c(on)j(Pr)n
(ogr)o(am)-8 2407 y(Compr)o(ehens)o(ion)p Fb(,)7 b(P)o(aris,)j(France,)
e(2002.)-73 2443 y([5])22 b(E.)11 b(Chikofsk)o(y)f(and)g(J.)g(Cross.)19
b(Re)o(v)o(erse)9 b(engineering)h(and)g(design)-8 2489
y(reco)o(v)o(ery:)h(a)e(taxonomy)n(.)j Fa(IEEE)d(Softwar)o(e)p
Fb(,)f(7\(1\),)i(1990.)-73 2526 y([6])22 b(R.)7 b(Cytron,)h(J.)g
(Ferrante,)f(B.)h(Rosen,)f(M.)h(W)m(e)o(gman,)f(and)f(F)m(.)i(Zadeck.)
-8 2571 y(An)13 b(ef)o(\002cient)g(method)g(of)g(computing)g(static)g
(single)g(assignment)-8 2617 y(form.)h(In)9 b Fa(Pr)n(oc.)f(of)h(the)g
(16th)g(Annual)f(A)o(CM)h(Symposium)e(on)h(Prin-)-8 2662
y(ciples)g(of)i(Pr)n(ogr)o(amming)d(Languages)o Fb(,)g(1989.)1006
42 y([7])21 b(A.)10 b(Erdem)g(and)f(W)m(.)h(Johnson.)j(T)m(ask)c
(orientation)h(and)f(tailoring)h(of)1070 87 y(interacti)o(v)o(e)e
(software)g(e)o(xplanations.)i(In)e Fa(Pr)n(oc)g(of)g(the)g(6th)g(W)m
(orking)1070 133 y(Confer)o(ence)d(on)i(Re)o(verse)f(Engineering)p
Fb(,)g(Atlanta,)j(Geor)o(gia,)f(1999.)1006 170 y([8])21
b(S.)10 b(Horwitz,)g(T)m(.)g(Reps,)f(and)f(D.)i(Binkle)o(y)n(.)k
(Interprocedural)9 b(slicing)1070 216 y(using)f(dependence)e(graphs.)12
b Fa(A)o(CM)d(T)o(OPLAS)p Fb(,)g(January)f(1990.)1006
253 y([9])21 b(E.)8 b(K)o(outso\002os)d(and)i(S.)g(North.)k
Fa(Dr)o(awing)c(gr)o(aphs)f(with)i Fb(dot.)i(A)l(T&T)1070
298 y(Labs)e(\226)h(Research,)f(Murray)h(Hill,)i(NJ,)e(March)g(1999.)
987 336 y([10])21 b(K.)7 b(Ottenstein)g(and)f(L.)h(Ottenstein.)i(The)d
(program)h(dependence)s(gr)o(-)1070 381 y(pah)h(in)i(a)e(software)h(de)
o(v)o(elopment)f(en)o(vironment.)k(In)d Fa(Pr)n(oceedings)1070
427 y(of)f(the)h(A)o(CM)f(SIGSOFT/SIGPLAN)f(Softwar)o(e)g(Engineering)g
(Sym-)1070 473 y(posium)14 b(on)h(Pr)o(actical)f(Softwar)o(e)g(De)o
(velopment)g(En)o(vir)n(onments)p Fb(,)1070 518 y(Pittsb)o(ur)o(gh,)c
(P)m(A,)f(1984.)987 555 y([11])21 b(V)-5 b(.)11 b(Rajlich.)17
b(Incremental)10 b(redocumentation)f(with)h(hyperte)o(xt.)17
b(In)1070 601 y Fa(Pr)n(oc.)9 b(of)g(Eutomicr)n(o)f('97)p
Fb(,)i(Berlin,)g(German)o(y)n(,)f(1997.)987 638 y([12])21
b(E.)11 b(Solo)o(way)n(,)f(J.)h(Pinto,)h(S.)f(Leto)o(vsk)o(y)n(,)f(D.)i
(Littman,)g(and)e(R.)h(Lam-)1070 684 y(pert.)25 b(Designing)11
b(documentation)g(to)i(compensate)e(for)i(delocal-)1070
730 y(ized)c(plans.)j Fa(Communications)c(of)h(the)g(A)o(CM)p
Fb(,)h(31\(11\),)f(1988.)987 767 y([13])21 b(R.)14 b(Stallman,)i(R.)e
(Pesch,)g(S.)h(Shebs,)e(and)h(al.)29 b Fa(Deb)o(ugging)12
b(with)1070 812 y(GDB)i(\226)h(The)e(GNU)i(Sour)o(ce-Le)o(ve)o(l)d(Deb)
o(ugger)p Fb(.)28 b(Free)14 b(Software)1070 858 y(F)o(oundation)8
b(Inc.,)i(2002.)i(9th)d(edition)g(for)h(GDB)f(v)o(ersion)g(5.1.1.)987
895 y([14])21 b(A.)16 b(v)o(an)e(Deursen)g(and)g(T)m(.)i(K)o(uipers.)32
b(Building)15 b(documentation)1070 941 y(generators.)8
b(In)g Fa(Pr)n(oc.)e(of)i(the)f(Int.)h(Confer)o(ence)t(on)f(Softwar)o
(e)f(Main-)1070 987 y(tenance)p Fb(,)i(Oxford,)h(England,)g(1999.)987
1024 y([15])21 b(D.)c(W)m(eise,)h(R.)f(F)m(.)g(Cre)o(w)n(,)h(M.)f(D.)g
(Ernst,)i(and)d(B.)h(Steensgaard.)1070 1069 y(V)l(alue)11
b(dependenc)o(e)d(graphs:)15 b(Representation)10 b(without)i(taxation.)
1070 1115 y(In)20 b Fa(Confer)o(ence)c(Recor)o(d)h(of)j(the)f(T)m
(wenty)g(F)n(irst)g(Annual)g(A)o(CM)1070 1161 y(SIGPLAN-SIGA)o(CT)c
(Symposium)f(on)h(Principles)g(of)h(Pr)n(ogr)o(am-)1070
1206 y(ming)9 b(Languages)o Fb(,)e(1994.)987 1243 y([16])21
b(H.)10 b(W)m(ertz.)k(The)9 b(design)f(of)i(an)e(inte)o(grated,)i
(interacti)o(v)o(e)g(and)e(incre-)1070 1289 y(mental)k(programming)h
(en)o(vironment.)23 b(In)13 b Fa(Pr)n(oc.)f(of)h(the)g(6th)f(Int.)1070
1335 y(Confer)o(ence)6 b(on)j(Softwar)o(e)f(Engineering)p
Fb(,)f(T)m(ok)o(yo)h(\(Japan\),)h(1982.)987 1372 y([17])21
b(H.)15 b(W)m(ertz)h(and)e(F)m(.)h(Balmas.)32 b(Cours)15
b(de)f(dea,)i(option)f('en)o(viron-)1070 1418 y(nements)e(de)g
(programmation'.)30 b(Uni)o(v)o(ersit)r(\264)-15 b(e)15
b(P)o(aris)g(8,)h(Departe-)1070 1463 y(ment)9 b(Informatique,)h(2002.)
987 1500 y([18])21 b(K.)13 b(W)m(ong,)h(S.)f(T)o(ille)o(y)n(,)h(H.)g
(Mueller)o(,)g(and)e(M.)i(Store)o(y)n(.)25 b(Structural)1070
1546 y(redocumentation:)9 b(A)g(case)e(study)n(.)j Fa(IEEE)e(Softwar)o
(e)p Fb(,)f(11\(6\),)i(1995.)919 2787 y Fq(10)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF